Index: Controller/Admin/Tests/YandexMarketProductsIndexControllerTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Controller/Admin/Tests/YandexMarketProductsIndexControllerTest.php b/Controller/Admin/Tests/YandexMarketProductsIndexControllerTest.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Controller/Admin/Tests/YandexMarketProductsIndexControllerTest.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,124 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Controller\Admin\Tests;
+
+use BaksDev\Users\User\Tests\TestUserAccount;
+use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
+use Symfony\Component\DependencyInjection\Attribute\When;
+
+/**
+ * @group yandex-market-products
+ * @group yandex-market-products-controller
+ * @group yandex-market-products-controller-index
+ */
+#[When(env: 'test')]
+final class YandexMarketProductsIndexControllerTest extends WebTestCase
+{
+    private const string URL = '/admin/ya/market/products';
+
+    private const string ROLE = 'ROLE_YA_MARKET_PRODUCTS_INDEX';
+
+    /** Доступ по роли ROLE_PRODUCT */
+    public function testRoleSuccessful(): void
+    {
+        self::ensureKernelShutdown();
+        $client = static::createClient();
+
+        foreach(TestUserAccount::getDevice() as $device)
+        {
+            $client->setServerParameter('HTTP_USER_AGENT', $device);
+
+            $usr = TestUserAccount::getModer(self::ROLE);
+
+            $client->loginUser($usr, 'user');
+            $client->request('GET', self::URL);
+
+            self::assertResponseIsSuccessful();
+        }
+
+        self::assertTrue(true);
+    }
+
+    /** Доступ по роли ROLE_ADMIN */
+    public function testRoleAdminSuccessful(): void
+    {
+        self::ensureKernelShutdown();
+        $client = static::createClient();
+
+        foreach(TestUserAccount::getDevice() as $device)
+        {
+            $client->setServerParameter('HTTP_USER_AGENT', $device);
+
+            $usr = TestUserAccount::getAdmin();
+
+            $client->loginUser($usr, 'user');
+            $client->request('GET', self::URL);
+
+            self::assertResponseIsSuccessful();
+        }
+
+        self::assertTrue(true);
+    }
+
+    /** Доступ по роли ROLE_USER */
+    public function testRoleUserFiled(): void
+    {
+        self::ensureKernelShutdown();
+        $client = static::createClient();
+
+        foreach(TestUserAccount::getDevice() as $device)
+        {
+            $client->setServerParameter('HTTP_USER_AGENT', $device);
+
+            $usr = TestUserAccount::getUsr();
+            $client->loginUser($usr, 'user');
+            $client->request('GET', self::URL);
+
+            self::assertResponseStatusCodeSame(403);
+        }
+
+        self::assertTrue(true);
+    }
+
+    /** Доступ без роли */
+    public function testGuestFiled(): void
+    {
+        self::ensureKernelShutdown();
+        $client = static::createClient();
+
+        foreach(TestUserAccount::getDevice() as $device)
+        {
+            $client->setServerParameter('HTTP_USER_AGENT', $device);
+
+            $client->request('GET', self::URL);
+
+            // Full authentication is required to access this resource
+            self::assertResponseStatusCodeSame(401);
+        }
+
+        self::assertTrue(true);
+    }
+}
\ No newline at end of file
Index: Controller/Admin/Tests/YandexMarketProductsNewEditControllerTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Controller/Admin/Tests/YandexMarketProductsNewEditControllerTest.php b/Controller/Admin/Tests/YandexMarketProductsNewEditControllerTest.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Controller/Admin/Tests/YandexMarketProductsNewEditControllerTest.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,125 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Controller\Admin\Tests;
+
+use BaksDev\Products\Product\Type\Invariable\ProductInvariableUid;
+use BaksDev\Users\User\Tests\TestUserAccount;
+use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
+use Symfony\Component\DependencyInjection\Attribute\When;
+
+/**
+ * @group yandex-market-products
+ * @group yandex-market-products-controller
+ * @group yandex-market-products-controller-edit
+ */
+#[When(env: 'test')]
+final class YandexMarketProductsNewEditControllerTest extends WebTestCase
+{
+    private const string URL = '/admin/ya/market/product/edit/'.ProductInvariableUid::TEST;
+
+    private const string ROLE = 'ROLE_YA_MARKET_PRODUCTS_EDIT';
+
+    /** Доступ по роли ROLE_PRODUCT */
+    public function testRoleSuccessful(): void
+    {
+        self::ensureKernelShutdown();
+        $client = static::createClient();
+
+        foreach(TestUserAccount::getDevice() as $device)
+        {
+            $client->setServerParameter('HTTP_USER_AGENT', $device);
+
+            $usr = TestUserAccount::getModer(self::ROLE);
+
+            $client->loginUser($usr, 'user');
+            $client->request('GET', self::URL);
+
+            self::assertResponseIsSuccessful();
+        }
+
+        self::assertTrue(true);
+    }
+
+    /** Доступ по роли ROLE_ADMIN */
+    public function testRoleAdminSuccessful(): void
+    {
+        self::ensureKernelShutdown();
+        $client = static::createClient();
+
+        foreach(TestUserAccount::getDevice() as $device)
+        {
+            $client->setServerParameter('HTTP_USER_AGENT', $device);
+
+            $usr = TestUserAccount::getAdmin();
+
+            $client->loginUser($usr, 'user');
+            $client->request('GET', self::URL);
+
+            self::assertResponseIsSuccessful();
+        }
+
+        self::assertTrue(true);
+    }
+
+    /** Доступ по роли ROLE_USER */
+    public function testRoleUserFiled(): void
+    {
+        self::ensureKernelShutdown();
+        $client = static::createClient();
+
+        foreach(TestUserAccount::getDevice() as $device)
+        {
+            $client->setServerParameter('HTTP_USER_AGENT', $device);
+
+            $usr = TestUserAccount::getUsr();
+            $client->loginUser($usr, 'user');
+            $client->request('GET', self::URL);
+
+            self::assertResponseStatusCodeSame(403);
+        }
+
+        self::assertTrue(true);
+    }
+
+    /** Доступ без роли */
+    public function testGuestFiled(): void
+    {
+        self::ensureKernelShutdown();
+        $client = static::createClient();
+
+        foreach(TestUserAccount::getDevice() as $device)
+        {
+            $client->setServerParameter('HTTP_USER_AGENT', $device);
+
+            $client->request('GET', self::URL);
+
+            // Full authentication is required to access this resource
+            self::assertResponseStatusCodeSame(401);
+        }
+
+        self::assertTrue(true);
+    }
+}
\ No newline at end of file
Index: Controller/Admin/IndexController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Controller/Admin/IndexController.php b/Controller/Admin/IndexController.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Controller/Admin/IndexController.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,95 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Controller\Admin;
+
+use BaksDev\Yandex\Market\Products\Forms\YandexMarketFilter\YandexMarketProductsFilterDTO;
+use BaksDev\Yandex\Market\Products\Forms\YandexMarketFilter\YandexMarketProductsFilterForm;
+use BaksDev\Core\Controller\AbstractController;
+use BaksDev\Core\Form\Search\SearchDTO;
+use BaksDev\Core\Form\Search\SearchForm;
+use BaksDev\Core\Listeners\Event\Security\RoleSecurity;
+use BaksDev\Products\Product\Forms\ProductFilter\Admin\ProductFilterDTO;
+use BaksDev\Products\Product\Forms\ProductFilter\Admin\ProductFilterForm;
+use BaksDev\Yandex\Market\Products\Repository\AllProductsWithYandexMarketImage\AllProductsWithYandexMarketImagesInterface;
+use BaksDev\Yandex\Market\Products\Repository\AllProductsWithYandexMarketImage\AllProductsWithYandexMarketImagesResult;
+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\HttpFoundation\Response;
+use Symfony\Component\HttpKernel\Attribute\AsController;
+use Symfony\Component\Routing\Annotation\Route;
+
+#[AsController]
+#[RoleSecurity('ROLE_YA_MARKET_PRODUCTS_INDEX')]
+final class IndexController extends AbstractController
+{
+    #[Route('/admin/ya/market/products/{page<\d+>}', name: 'admin.products.index', methods: ['GET', 'POST'])]
+    public function index(
+        Request $request,
+        AllProductsWithYandexMarketImagesInterface $allProductsWithYandexMarketImages,
+        int $page = 0,
+    ): Response
+    {
+        // Поиск
+        $search = new SearchDTO();
+
+        $searchForm = $this
+            ->createForm(
+                type: SearchForm::class,
+                data: $search,
+                options: ['action' => $this->generateUrl('yandex-market-products:admin.products.index')]
+            )
+            ->handleRequest($request);
+
+        /**
+         * Фильтр продукции по ТП
+         */
+        $productFilterDTO = new ProductFilterDTO();
+        $productFilterForm = $this->createForm(ProductFilterForm::class, $productFilterDTO, [
+            'action' => $this->generateUrl('yandex-market-products:admin.products.index'),
+        ]);
+
+        $productFilterForm->handleRequest($request);
+
+        $yandexMarketProductsFilterDTO = new YandexMarketProductsFilterDTO();
+        $yandexMarketProductsFilterForm = $this->createForm(YandexMarketProductsFilterForm::class, $yandexMarketProductsFilterDTO, [
+            'action' => $this->generateUrl('yandex-market-products:admin.products.index'),
+        ]);
+        $yandexMarketProductsFilterForm->handleRequest($request);
+
+        /** @var AllProductsWithYandexMarketImagesResult $products */
+        $products = $allProductsWithYandexMarketImages
+            ->search($search)
+            ->filter($productFilterDTO)
+            ->filterYandexMarketProducts($yandexMarketProductsFilterDTO)
+            ->findAll();
+
+        return $this->render([
+            'filter' => $productFilterForm->createView(),
+            'yandexMarket' => $yandexMarketProductsFilterForm->createView(),
+            'search' => $searchForm->createView(),
+            'query' => $products,
+        ]);
+    }
+}
\ No newline at end of file
Index: Controller/Admin/NewEditController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Controller/Admin/NewEditController.php b/Controller/Admin/NewEditController.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Controller/Admin/NewEditController.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,113 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Controller\Admin;
+
+use BaksDev\Products\Product\Repository\ProductDetail\ProductDetailByInvariableInterface;
+use BaksDev\Core\Controller\AbstractController;
+use BaksDev\Core\Listeners\Event\Security\RoleSecurity;
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\YandexMarketProductDTO;
+use Doctrine\ORM\EntityManagerInterface;
+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\HttpFoundation\Response;
+use Symfony\Component\HttpKernel\Attribute\AsController;
+use Symfony\Component\Routing\Annotation\Route;
+use BaksDev\Yandex\Market\Products\Entity\YandexMarketProduct;
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\YandexMarketProductHandler;
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\YandexMarketProductForm;
+
+#[AsController]
+#[RoleSecurity('ROLE_YA_MARKET_PRODUCTS_EDIT')]
+class NewEditController extends AbstractController
+{
+    #[Route(
+        '/admin/ya/market/product/edit/{invariable}',
+        name: 'admin.products.edit',
+        methods: ['GET', 'POST']
+    )]
+    public function index(
+        Request $request,
+        EntityManagerInterface $entityManager,
+        YandexMarketProductHandler $handler,
+        ProductDetailByInvariableInterface $productDetailByInvariable,
+        string|null $invariable = null,
+    ): Response
+    {
+        $dto = new YandexMarketProductDTO();
+
+        $dto->setInvariable($invariable);
+
+        /**
+         * Находим уникальный продукт Яндекс Маркет, делаем его инстанс, передаем в форму
+         *
+         * @var YandexMarketProduct|null $yandexMarketProductCard
+         */
+         $yandexMarketProductCard = $entityManager->getRepository(YandexMarketProduct::class)
+             ->findOneBy([
+                 'invariable' => $invariable,
+             ]);
+
+         $yandexMarketProductCard?->getDto($dto);
+
+        $form = $this->createForm(
+            YandexMarketProductForm::class,
+            $dto,
+            ['action' => $this->generateUrl(
+                'yandex-market-products:admin.products.edit',
+                [
+                    'invariable' => $dto->getInvariable(),
+                ]
+            )]
+        );
+
+         $form->handleRequest($request);
+
+         if($form->isSubmitted() && $form->isValid() && $form->has('yandex_market_product'))
+         {
+             $this->refreshTokenForm($form);
+
+             $handle = $handler->handle($dto);
+
+             $this->addFlash(
+                 'page.edit',
+                 $handle instanceof YandexMarketProduct ? 'success.edit' : 'danger.edit',
+                 'yandex-market-products.admin',
+                 $handle
+             );
+
+             return $this->redirectToRoute('yandex-market-products:admin.products.index');
+         }
+
+         $yandexMarketProductHeader = $productDetailByInvariable
+            ->invariable($invariable)
+            ->find()
+            ->current();
+
+        return $this->render([
+            'form' => $form->createView(),
+            'product' => $yandexMarketProductHeader,
+        ]);
+    }
+}
\ No newline at end of file
Index: Entity/Images/YandexMarketProductImage.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Entity/Images/YandexMarketProductImage.php b/Entity/Images/YandexMarketProductImage.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Entity/Images/YandexMarketProductImage.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,114 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Entity\Images;
+
+use BaksDev\Yandex\Market\Products\Type\Image\YandexMarketProductImageUid;
+use BaksDev\Core\Entity\EntityState;
+use BaksDev\Files\Resources\Upload\UploadEntityInterface;
+use BaksDev\Yandex\Market\Products\Entity\YandexMarketProduct;
+use Doctrine\DBAL\Types\Types;
+use Doctrine\ORM\Mapping as ORM;
+use Symfony\Component\Validator\Constraints as Assert;
+
+#[ORM\Entity]
+#[ORM\Table(name: 'ya_market_product_images')]
+#[ORM\Index(columns: ['root'])]
+final class YandexMarketProductImage extends EntityState implements UploadEntityInterface
+{
+    /** ID */
+    #[Assert\NotBlank]
+    #[Assert\Uuid]
+    #[ORM\Id]
+    #[ORM\Column(type: YandexMarketProductImageUid::TYPE)]
+    private readonly YandexMarketProductImageUid $id;
+
+    /** Идентификатор продукта Яндекс Маркет */
+    #[Assert\NotBlank]
+    #[Assert\Uuid]
+    #[ORM\ManyToOne(targetEntity: YandexMarketProduct::class, inversedBy: 'images')]
+    #[ORM\JoinColumn(name: 'market', referencedColumnName: 'id')]
+    private YandexMarketProduct $market;
+
+    /** Название файла */
+    #[Assert\NotBlank]
+    #[Assert\Length(max: 100)]
+    #[ORM\Column(type: Types::STRING)]
+    private string $name;
+
+    /** Расширение файла */
+    #[Assert\NotBlank]
+    #[Assert\Choice(['png', 'gif', 'jpg', 'jpeg', 'webp'])]
+    #[ORM\Column(type: Types::STRING)]
+    private string $ext;
+
+    /** Размер файла */
+    #[Assert\NotBlank]
+    #[Assert\Range(max: 10485760)] // (1024 * 1024) *10
+    #[ORM\Column(type: Types::INTEGER)]
+    private int $size = 0;
+
+    /** Файл загружен на CDN */
+    #[ORM\Column(type: Types::BOOLEAN, options: ['default' => false])]
+    private bool $cdn = false;
+
+    /** Заглавное фото */
+    #[ORM\Column(type: Types::BOOLEAN, options: ['default' => false])]
+    private bool $root = false;
+
+    public function __construct(YandexMarketProduct $yandexMarket)
+    {
+        $this->id = clone(new YandexMarketProductImageUid());
+        $this->market = $yandexMarket;
+    }
+
+    public function getId(): YandexMarketProductImageUid
+    {
+        return $this->id;
+    }
+
+    public function updFile(string $name, string $ext, int $size): void
+    {
+        $this->name = $name;
+        $this->ext = $ext;
+        $this->size = $size;
+        $this->cdn = false;
+    }
+
+    public function updCdn(?string $ext = null): void
+    {
+        if($ext)
+        {
+            $this->ext = $ext;
+        }
+
+        $this->cdn = true;
+    }
+
+    public function getExt(): string
+    {
+        return $this->ext;
+    }
+}
\ No newline at end of file
Index: Entity/YandexMarketProduct.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Entity/YandexMarketProduct.php b/Entity/YandexMarketProduct.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Entity/YandexMarketProduct.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,78 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Entity;
+
+use BaksDev\Core\Entity\EntityState;
+use BaksDev\Products\Product\Type\Invariable\ProductInvariableUid;
+use BaksDev\Yandex\Market\Products\Entity\Images\YandexMarketProductImage;
+use BaksDev\Yandex\Market\Products\Type\Id\YandexMarketProductUid;
+use Doctrine\Common\Collections\ArrayCollection;
+use Doctrine\Common\Collections\Collection;
+use Doctrine\ORM\Mapping as ORM;
+use Symfony\Component\Validator\Constraints as Assert;
+
+#[ORM\Entity]
+#[ORM\Table(name: 'ya_market_product')]
+final class YandexMarketProduct extends EntityState
+{
+    #[Assert\NotBlank]
+    #[Assert\Uuid]
+    #[ORM\Id]
+    #[ORM\Column(type: YandexMarketProductUid::TYPE)]
+    private YandexMarketProductUid $id;
+
+    #[Assert\NotBlank]
+    #[Assert\Uuid]
+    #[ORM\Column(type: ProductInvariableUid::TYPE)]
+    private ProductInvariableUid $invariable;
+
+    /** Коллекция изображений продукта для Яндекс Маркета */
+    #[ORM\OrderBy(['root' => 'DESC'])]
+    #[ORM\OneToMany(targetEntity: YandexMarketProductImage::class, mappedBy: 'market', cascade: ['all'], fetch: 'EAGER')]
+    private Collection $images;
+
+    public function __construct()
+    {
+        $this->id = new YandexMarketProductUid();
+        $this->images = new ArrayCollection();
+    }
+
+    public function __toString(): string
+    {
+        return (string) $this->id;
+    }
+
+    public function getId(): YandexMarketProductUid
+    {
+        return $this->id;
+    }
+
+    /** Метод возвращает коллекцию изображений для сжатия в формат WEBP */
+    public function getImages(): Collection
+    {
+        return $this->images;
+    }
+}
\ No newline at end of file
Index: Entity/YandexMarketProductInterface.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Entity/YandexMarketProductInterface.php b/Entity/YandexMarketProductInterface.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Entity/YandexMarketProductInterface.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,28 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Entity;
+
+interface YandexMarketProductInterface {}
\ No newline at end of file
Index: Forms/YandexMarketFilter/YandexMarketProductsFilterDTO.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Forms/YandexMarketFilter/YandexMarketProductsFilterDTO.php b/Forms/YandexMarketFilter/YandexMarketProductsFilterDTO.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Forms/YandexMarketFilter/YandexMarketProductsFilterDTO.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,48 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Forms\YandexMarketFilter;
+
+final class YandexMarketProductsFilterDTO
+{
+    /**
+     * Флаг
+     */
+    private null|bool $exists = null;
+
+    /**
+     * Exists
+     */
+    public function getExists(): ?bool
+    {
+        return $this->exists;
+    }
+
+    public function setExists(?bool $exists): self
+    {
+        $this->exists = $exists;
+        return $this;
+    }
+}
\ No newline at end of file
Index: Forms/YandexMarketFilter/YandexMarketProductsFilterForm.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Forms/YandexMarketFilter/YandexMarketProductsFilterForm.php b/Forms/YandexMarketFilter/YandexMarketProductsFilterForm.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Forms/YandexMarketFilter/YandexMarketProductsFilterForm.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,123 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Forms\YandexMarketFilter;
+
+use Symfony\Component\Form\AbstractType;
+use Symfony\Component\Form\Extension\Core\Type\ChoiceType;
+use Symfony\Component\Form\FormBuilderInterface;
+use Symfony\Component\Form\FormEvent;
+use Symfony\Component\Form\FormEvents;
+use Symfony\Component\HttpFoundation\RequestStack;
+use Symfony\Component\HttpFoundation\Session\SessionInterface;
+
+final class YandexMarketProductsFilterForm extends AbstractType
+{
+    private string $sessionKey;
+
+    private SessionInterface|false $session = false;
+
+    public function __construct(private readonly RequestStack $request)
+    {
+        $this->sessionKey = md5(self::class);
+    }
+
+    public function buildForm(FormBuilderInterface $builder, array $options): void
+    {
+        $builder->add('exists', ChoiceType::class, [
+            'choices' => [
+                'Все' => null,
+                'С фото' => true,
+                'Без фото' => false,
+            ],
+        ]);
+
+        $builder->addEventListener(
+            FormEvents::PRE_SET_DATA,
+            function(FormEvent $event): void {
+                /** @var YandexMarketProductsFilterDTO $data */
+                $data = $event->getData();
+
+                if($this->session === false)
+                {
+                    $this->session = $this->request->getSession();
+                }
+
+                if($this->session && $this->session->get('statusCode') === 307)
+                {
+                    $this->session->remove($this->sessionKey);
+                    $this->session = false;
+                }
+
+                if($this->session)
+                {
+                    if(time() - $this->session->getMetadataBag()->getLastUsed() > 300)
+                    {
+                        $this->session->remove($this->sessionKey);
+                        $data->setExists(null);
+                        return;
+                    }
+
+                    $sessionData = $this->request->getSession()->get($this->sessionKey);
+                    $sessionJson = $sessionData ? base64_decode($sessionData) : false;
+                    $sessionArray = $sessionJson !== false && json_validate($sessionJson) ? json_decode($sessionJson, true) : [];
+
+                    $data->setExists($sessionArray['exists'] ?? null);
+                }
+            }
+        );
+
+        $builder->addEventListener(
+            FormEvents::POST_SUBMIT,
+            function(FormEvent $event): void {
+                /** @var YandexMarketProductsFilterDTO $data */
+                $data = $event->getData();
+
+                if($this->session === false)
+                {
+                    $this->session = $this->request->getSession();
+                }
+
+                if($this->session)
+                {
+                    $sessionArray = [];
+
+                    $data->getExists() !== null ? $sessionArray['exists'] = $data->getExists() : null;
+
+                    if($sessionArray)
+                    {
+                        $sessionJson = json_encode($sessionArray);
+                        $sessionData = base64_encode($sessionJson);
+                        $this->request->getSession()->set($this->sessionKey, $sessionData);
+                        return;
+                    }
+
+                    $this->request->getSession()->remove($this->sessionKey);
+
+                }
+            }
+        );
+    }
+}
\ No newline at end of file
Index: Mapper/Properties/PicturesYaMarketProductProperty.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Mapper/Properties/PicturesYaMarketProductProperty.php b/Mapper/Properties/PicturesYaMarketProductProperty.php
--- a/Mapper/Properties/PicturesYaMarketProductProperty.php	(revision c7e6f7d346de53ca624f846eae41ab2e7a2851a2)
+++ b/Mapper/Properties/PicturesYaMarketProductProperty.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -26,7 +26,6 @@
 namespace BaksDev\Yandex\Market\Products\Mapper\Properties;
 
 use BaksDev\Yandex\Market\Products\Mapper\Properties\Collection\YaMarketProductPropertyInterface;
-use BaksDev\Yandex\Market\Products\Repository\Card\CurrentYaMarketProductsCard\YaMarketProductsCardInterface;
 use Symfony\Component\DependencyInjection\Attribute\AutoconfigureTag;
 use Symfony\Component\DependencyInjection\Attribute\Autowire;
 
@@ -42,7 +41,6 @@
     public function __construct(
         #[Autowire(env: 'HOST')] private readonly ?string $HOST = null,
         #[Autowire(env: 'CDN_HOST')] private readonly ?string $CDN_HOST = null,
-        private readonly ?YaMarketProductsCardInterface $yaMarketProductsCard = null
     ) {}
 
 
@@ -94,29 +92,42 @@
     }
 
 
-    public function getData(array $data): mixed
+    public function getData(array $data): ?array
     {
+        if(isset($data['yandex_market_product_images']))
+        {
+            return $this->transform($data['yandex_market_product_images']);
+        }
+
         if(isset($data['product_images']))
         {
-            $images = json_decode($data['product_images']);
+            return $this->transform($data['product_images']);
+        }
+
+        return null;
+    }
+
+    /** Формируем массив элементов с ищображениями */
+    public function transform(string $images): ?array
+    {
+        $images = json_decode($images);
 
-            /* Сортируем коллекцию изображений по root */
-            usort($images, static function($item1) {
-                return ($item1->product_img_root === false) ? 1 : -1;
-            });
+        /* Сортируем коллекцию изображений по root */
+        usort($images, static function($item1) {
+            return ($item1->product_img_root === false) ? 1 : -1;
+        });
 
-            foreach($images as $image)
-            {
-                $picture = 'https://'.($image->product_img_cdn ? $this->CDN_HOST : $this->HOST).$image->product_img.'/'.($image->product_img_cdn ? 'large.' : 'image.').$image->product_img_ext;
+        foreach($images as $image)
+        {
+            $picture = 'https://'.($image->product_img_cdn ? $this->CDN_HOST : $this->HOST).$image->product_img.'/'.($image->product_img_cdn ? 'large.' : 'image.').$image->product_img_ext;
 
-                // Проверяе м доступность файла изображения
-                $Headers = get_headers($picture);
-                $Headers = current($Headers);
+            // Проверяем доступность файла изображения
+            $Headers = get_headers($picture);
+            $Headers = current($Headers);
 
-                if(str_contains($Headers, '200')) // ожидаем HTTP/1.1 200 OK
-                {
-                    $pictures[] = $picture;
-                }
+            if(str_contains($Headers, '200')) // ожидаем HTTP/1.1 200 OK
+            {
+                $pictures[] = $picture;
             }
         }
 
Index: Messenger/ProductStocks/UpdateStocksYaMarketByIncoming.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Messenger/ProductStocks/UpdateStocksYaMarketByIncoming.php b/Messenger/ProductStocks/UpdateStocksYaMarketByIncoming.php
--- a/Messenger/ProductStocks/UpdateStocksYaMarketByIncoming.php	(revision c7e6f7d346de53ca624f846eae41ab2e7a2851a2)
+++ b/Messenger/ProductStocks/UpdateStocksYaMarketByIncoming.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -30,7 +30,6 @@
 use BaksDev\Products\Stocks\Entity\Stock\Event\ProductStockEvent;
 use BaksDev\Products\Stocks\Entity\Stock\Products\ProductStockProduct;
 use BaksDev\Products\Stocks\Messenger\ProductStockMessage;
-use BaksDev\Products\Stocks\Repository\ProductStocksById\ProductStocksByIdInterface;
 use BaksDev\Products\Stocks\Type\Status\ProductStockStatus\ProductStockStatusIncoming;
 use BaksDev\Yandex\Market\Products\Messenger\Card\YaMarketProductsCardMessage;
 use BaksDev\Yandex\Market\Products\Messenger\YaMarketProductsStocksUpdate\YaMarketProductsStocksMessage;
@@ -45,7 +44,6 @@
 final readonly class UpdateStocksYaMarketByIncoming
 {
     public function __construct(
-        private ProductStocksByIdInterface $productStocks,
         private EntityManagerInterface $entityManager,
         private MessageDispatchInterface $messageDispatch,
         private AllProfileYaMarketTokenInterface $allProfileYaMarketToken,
Index: Messenger/YandexMarketProductMessage.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Messenger/YandexMarketProductMessage.php b/Messenger/YandexMarketProductMessage.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Messenger/YandexMarketProductMessage.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,46 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Messenger;
+
+use BaksDev\Yandex\Market\Products\Type\Id\YandexMarketProductUid;
+
+final class YandexMarketProductMessage
+{
+    /**
+     * Внутренний (системный) идентификатор продукта YandexMarket
+     */
+    private YandexMarketProductUid $id;
+
+    public function __construct(YandexMarketProductUid $id)
+    {
+        $this->id = $id;
+    }
+
+    public function getId(): YandexMarketProductUid
+    {
+        return $this->id;
+    }
+}
\ No newline at end of file
Index: Repository/AllProductsWithYandexMarketImage/Tests/AllProductsWithYandexMarketImagesTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Repository/AllProductsWithYandexMarketImage/Tests/AllProductsWithYandexMarketImagesTest.php b/Repository/AllProductsWithYandexMarketImage/Tests/AllProductsWithYandexMarketImagesTest.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Repository/AllProductsWithYandexMarketImage/Tests/AllProductsWithYandexMarketImagesTest.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,133 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Repository\AllProductsWithYandexMarketImage\Tests;
+
+use BaksDev\Products\Product\Type\Event\ProductEventUid;
+use BaksDev\Products\Product\Type\Id\ProductUid;
+use BaksDev\Products\Product\Type\Invariable\ProductInvariableUid;
+use BaksDev\Products\Product\Type\Offers\ConstId\ProductOfferConst;
+use BaksDev\Products\Product\Type\Offers\Id\ProductOfferUid;
+use BaksDev\Products\Product\Type\Offers\Variation\ConstId\ProductVariationConst;
+use BaksDev\Products\Product\Type\Offers\Variation\Id\ProductVariationUid;
+use BaksDev\Products\Product\Type\Offers\Variation\Modification\ConstId\ProductModificationConst;
+use BaksDev\Products\Product\Type\Offers\Variation\Modification\Id\ProductModificationUid;
+use BaksDev\Yandex\Market\Products\Forms\YandexMarketFilter\YandexMarketProductsFilterDTO;
+use BaksDev\Yandex\Market\Products\Repository\AllProductsWithYandexMarketImage\AllProductsWithYandexMarketImagesInterface;
+use BaksDev\Yandex\Market\Products\Repository\AllProductsWithYandexMarketImage\AllProductsWithYandexMarketImagesResult;
+use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
+use Symfony\Component\DependencyInjection\Attribute\When;
+
+/**
+ * @group yandex-market-products
+ * @group yandex-market-products-repository
+ */
+#[When(env: 'test')]
+final class AllProductsWithYandexMarketImagesTest extends KernelTestCase
+{
+    public function testFindAll(): void
+    {
+        /** @var AllProductsWithYandexMarketImagesInterface $allProductsWithYandexMarketImages */
+        $allProductsWithYandexMarketImages = self::getContainer()
+            ->get(AllProductsWithYandexMarketImagesInterface::class);
+
+        $yandexMarketFilter = new YandexMarketProductsFilterDTO();
+        $result = $allProductsWithYandexMarketImages
+            ->filterYandexMarketProducts($yandexMarketFilter)
+            ->findAll()
+            ->getData();
+
+        /** @var AllProductsWithYandexMarketImagesResult $item */
+        foreach($result as $item)
+        {
+            self::assertInstanceOf(ProductUid::class, $item->getId());
+            self::assertInstanceOf(ProductEventUid::class, $item->getEvent());
+            self::assertInstanceOf(ProductInvariableUid::class, $item->getInvariable());
+            self::assertIsString($item->getProductName());
+            self::assertTrue(
+                $item->getProductOfferId() === null ||
+                $item->getProductOfferId() instanceof ProductOfferUid
+            );
+            self::assertTrue(
+                $item->getProductOfferValue() === null ||
+                is_string($item->getProductOfferValue())
+            );
+            self::assertTrue(
+                $item->getProductOfferConst() === null ||
+                $item->getProductOfferConst() instanceof ProductOfferConst
+            );
+            self::assertTrue(
+                $item->getProductOfferPostfix() === null ||
+                is_string($item->getProductOfferPostfix())
+            );
+            self::assertTrue(
+                $item->getProductOfferReference() === null ||
+                is_string($item->getProductOfferReference())
+            );
+            self::assertTrue(
+                $item->getProductVariationId() === null ||
+                $item->getProductVariationId() instanceof ProductVariationUid
+            );
+            self::assertTrue(
+                $item->getProductVariationValue() === null ||
+                is_string($item->getProductVariationValue())
+            );
+            self::assertTrue(
+                $item->getProductVariationConst() === null ||
+                $item->getProductVariationConst() instanceof ProductVariationConst
+            );
+            self::assertTrue(
+                $item->getProductVariationPostfix() === null ||
+                is_string($item->getProductVariationPostfix())
+            );
+            self::assertTrue(
+                $item->getProductVariationReference() === null ||
+                is_string($item->getProductVariationReference())
+            );
+            self::assertTrue(
+                $item->getProductModificationId() === null ||
+                $item->getProductModificationId() instanceof ProductModificationUid
+            );
+            self::assertTrue(
+                $item->getProductModificationValue() === null ||
+                is_string($item->getProductModificationValue())
+            );
+            self::assertTrue(
+                $item->getProductModificationConst() === null ||
+                $item->getProductModificationConst() instanceof ProductModificationConst
+            );
+            self::assertTrue(
+                $item->getProductModificationPostfix() === null ||
+                is_string($item->getProductModificationPostfix())
+            );
+            self::assertTrue(
+                $item->getProductModificationReference() === null ||
+                is_string($item->getProductModificationReference())
+            );
+
+            break;
+        }
+    }
+}
\ No newline at end of file
Index: Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesInterface.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesInterface.php b/Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesInterface.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesInterface.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,42 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Repository\AllProductsWithYandexMarketImage;
+
+use BaksDev\Core\Form\Search\SearchDTO;
+use BaksDev\Core\Services\Paginator\PaginatorInterface;
+use BaksDev\Products\Product\Forms\ProductFilter\Admin\ProductFilterDTO;
+use BaksDev\Yandex\Market\Products\Forms\YandexMarketFilter\YandexMarketProductsFilterDTO;
+
+interface AllProductsWithYandexMarketImagesInterface
+{
+    public function search(SearchDTO $search): self;
+
+    public function filter(ProductFilterDTO $filter): self;
+
+    public function filterYandexMarketProducts(YandexMarketProductsFilterDTO $yandexMarketProductsFilter): self;
+
+    public function findAll(): PaginatorInterface;
+}
\ No newline at end of file
Index: Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesRepository.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesRepository.php b/Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesRepository.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesRepository.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,558 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Repository\AllProductsWithYandexMarketImage;
+
+use BaksDev\Core\Doctrine\DBALQueryBuilder;
+use BaksDev\Core\Form\Search\SearchDTO;
+use BaksDev\Core\Services\Paginator\PaginatorInterface;
+use BaksDev\Elastic\Api\Index\ElasticGetIndex;
+use BaksDev\Products\Category\Entity\CategoryProduct;
+use BaksDev\Products\Category\Entity\Info\CategoryProductInfo;
+use BaksDev\Products\Category\Entity\Offers\CategoryProductOffers;
+use BaksDev\Products\Category\Entity\Offers\Variation\CategoryProductVariation;
+use BaksDev\Products\Category\Entity\Offers\Variation\Modification\CategoryProductModification;
+use BaksDev\Products\Category\Entity\Trans\CategoryProductTrans;
+use BaksDev\Products\Category\Type\Id\CategoryProductUid;
+use BaksDev\Products\Product\Entity\Active\ProductActive;
+use BaksDev\Products\Product\Entity\Category\ProductCategory;
+use BaksDev\Products\Product\Entity\Event\ProductEvent;
+use BaksDev\Products\Product\Entity\Info\ProductInfo;
+use BaksDev\Products\Product\Entity\Offers\Image\ProductOfferImage;
+use BaksDev\Products\Product\Entity\Offers\Price\ProductOfferPrice;
+use BaksDev\Products\Product\Entity\Offers\ProductOffer;
+use BaksDev\Products\Product\Entity\Offers\Variation\Image\ProductVariationImage;
+use BaksDev\Products\Product\Entity\Offers\Variation\Modification\Price\ProductModificationPrice;
+use BaksDev\Products\Product\Entity\Offers\Variation\Modification\ProductModification;
+use BaksDev\Products\Product\Entity\Offers\Variation\Price\ProductVariationPrice;
+use BaksDev\Products\Product\Entity\Offers\Variation\ProductVariation;
+use BaksDev\Products\Product\Entity\Photo\ProductPhoto;
+use BaksDev\Products\Product\Entity\Product;
+use BaksDev\Products\Product\Entity\ProductInvariable;
+use BaksDev\Products\Product\Entity\Property\ProductProperty;
+use BaksDev\Products\Product\Entity\Trans\ProductTrans;
+use BaksDev\Products\Product\Forms\ProductFilter\Admin\ProductFilterDTO;
+use BaksDev\Products\Product\Forms\ProductFilter\Admin\Property\ProductFilterPropertyDTO;
+use BaksDev\Yandex\Market\Products\Entity\Images\YandexMarketProductImage;
+use BaksDev\Yandex\Market\Products\Entity\YandexMarketProduct;
+use BaksDev\Yandex\Market\Products\Forms\YandexMarketFilter\YandexMarketProductsFilterDTO;
+
+final class AllProductsWithYandexMarketImagesRepository implements AllProductsWithYandexMarketImagesInterface
+{
+    private ?ProductFilterDTO $filter = null;
+
+    private ?YandexMarketProductsFilterDTO $yandexMarketProductsFilter = null;
+    private ?SearchDTO $search = null;
+
+    public function __construct(
+        private readonly DBALQueryBuilder $DBALQueryBuilder,
+        private readonly PaginatorInterface $paginator,
+        private readonly ?ElasticGetIndex $elasticGetIndex = null,
+    ) {}
+
+    public function search(SearchDTO $search): self
+    {
+        $this->search = $search;
+        return $this;
+    }
+
+    public function filter(ProductFilterDTO $filter): self
+    {
+        $this->filter = $filter;
+        return $this;
+    }
+
+    public function filterYandexMarketProducts(YandexMarketProductsFilterDTO $yandexMarketProductsFilter): self
+    {
+        $this->yandexMarketProductsFilter = $yandexMarketProductsFilter;
+        return $this;
+    }
+
+    public function findAll(): PaginatorInterface
+    {
+        $dbal = $this->DBALQueryBuilder
+            ->createQueryBuilder(self::class)
+            ->bindLocal();
+
+        $dbal
+            ->select('product.id')
+            ->addSelect('product.event')
+            ->from(Product::class, 'product');
+
+        $dbal->join(
+            'product',
+            ProductEvent::class,
+            'product_event',
+            'product_event.id = product.event'
+        );
+
+        /** Только активные продукты */
+        $dbal
+            ->join(
+                'product',
+                ProductActive::class,
+                'product_active',
+                '
+                    product_active.event = product.event AND
+                    product_active.active IS TRUE'
+            );
+
+        /** Название продукта */
+        $dbal
+            ->addSelect('product_trans.name AS product_name')
+            ->join(
+                'product_event',
+                ProductTrans::class,
+                'product_trans',
+                '
+                    product_trans.event = product_event.id AND 
+                    product_trans.local = :local'
+            );
+
+        /** Здесь основной артикул товара */
+        $dbal
+            ->join(
+                'product_event',
+                ProductInfo::class,
+                'product_info',
+                'product_info.product = product.id'
+            );
+
+        /**
+         * ТОРГОВОЕ ПРЕДЛОЖЕНИЕ
+         */
+        $dbal
+            ->addSelect('product_offer.id as product_offer_id')
+            ->addSelect('product_offer.value as product_offer_value')
+            ->addSelect('product_offer.const as product_offer_const')
+            ->addSelect('product_offer.postfix as product_offer_postfix')
+            ->leftJoin(
+                'product_event',
+                ProductOffer::class,
+                'product_offer',
+                'product_offer.event = product_event.id'
+            );
+
+
+        /** ФИЛЬТР по торговому предложения */
+        if($this->filter?->getOffer())
+        {
+            $dbal->andWhere('product_offer.value = :offer');
+            $dbal->setParameter('offer', $this->filter->getOffer());
+        }
+
+        /** ЦЕНА торгового предложения */
+        $dbal->leftJoin(
+            'product_offer',
+            ProductOfferPrice::class,
+            'product_offer_price',
+            'product_offer_price.offer = product_offer.id'
+        );
+
+        /** ТИП торгового предложения */
+        $dbal
+            ->addSelect('category_offer.reference as product_offer_reference')
+            ->leftJoin(
+                'product_offer',
+                CategoryProductOffers::class,
+                'category_offer',
+                'category_offer.id = product_offer.category_offer'
+            );
+
+        /**
+         * ВАРИАНТЫ торгового предложения
+         */
+        $dbal
+            ->addSelect('product_variation.id as product_variation_id')
+            ->addSelect('product_variation.const as product_variation_const')
+            ->addSelect('product_variation.value as product_variation_value')
+            ->addSelect('product_variation.postfix as product_variation_postfix')
+            ->leftJoin(
+                'product_offer',
+                ProductVariation::class,
+                'product_variation',
+                'product_variation.offer = product_offer.id'
+            );
+
+        /** ФИЛЬТР по множественным вариантам */
+        if($this->filter?->getVariation())
+        {
+            $dbal->andWhere('product_variation.value = :variation');
+            $dbal->setParameter('variation', $this->filter->getVariation());
+        }
+
+
+        /** ЦЕНА множественных вариантов */
+        $dbal->leftJoin(
+            'product_variation',
+            ProductVariationPrice::class,
+            'product_variation_price',
+            'product_variation_price.variation = product_variation.id'
+        );
+
+        /** ТИП множественного варианта торгового предложения */
+        $dbal
+            ->addSelect('category_offer_variation.reference as product_variation_reference')
+            ->leftJoin(
+                'product_variation',
+                CategoryProductVariation::class,
+                'category_offer_variation',
+                'category_offer_variation.id = product_variation.category_variation'
+            );
+
+        /**
+         * МОДИФИКАЦИИ множественного варианта
+         */
+        $dbal
+            ->addSelect('product_modification.id as product_modification_id')
+            ->addSelect('product_modification.const as product_modification_const')
+            ->addSelect('product_modification.value as product_modification_value')
+            ->addSelect('product_modification.postfix as product_modification_postfix')
+            ->leftJoin(
+                'product_variation',
+                ProductModification::class,
+                'product_modification',
+                'product_modification.variation = product_variation.id '
+            );
+
+        /** ФИЛЬТР по модификациям множественного варианта */
+        if($this->filter?->getModification())
+        {
+            $dbal->andWhere('product_modification.value = :modification');
+            $dbal->setParameter('modification', $this->filter->getModification());
+        }
+
+        /** ЦЕНА модификации множественного варианта */
+        $dbal->leftJoin(
+            'product_modification',
+            ProductModificationPrice::class,
+            'product_modification_price',
+            'product_modification_price.modification = product_modification.id'
+        );
+
+        /** ТИП модификации множественного варианта */
+        $dbal->addSelect('category_offer_modification.reference as product_modification_reference');
+        $dbal->leftJoin(
+            'product_modification',
+            CategoryProductModification::class,
+            'category_offer_modification',
+            'category_offer_modification.id = product_modification.category_modification'
+        );
+
+        /**
+         * Артикул продукта
+         */
+        $dbal->addSelect('
+            COALESCE(
+                product_modification.article, 
+                product_variation.article, 
+                product_offer.article, 
+                product_info.article
+            ) AS product_article
+		');
+
+        /**
+         * Все фото
+         */
+        $dbal->leftJoin(
+            'product_event',
+            ProductPhoto::class,
+            'product_photo',
+            '
+                product_photo.event = product_event.id AND
+                product_photo.root = true'
+        );
+
+        $dbal->leftJoin(
+            'product_offer',
+            ProductVariationImage::class,
+            'product_variation_image',
+            '
+                product_variation_image.variation = product_variation.id AND
+                product_variation_image.root = true'
+        );
+
+        $dbal->leftJoin(
+            'product_offer',
+            ProductOfferImage::class,
+            'product_offer_images',
+            '
+                product_offer_images.offer = product_offer.id AND
+                product_offer_images.root = true'
+        );
+
+        $dbal->addSelect(
+            "
+			CASE
+			   WHEN product_variation_image.name IS NOT NULL THEN
+					CONCAT ( '/upload/".$dbal->table(ProductVariationImage::class)."' , '/', product_variation_image.name)
+			   WHEN product_offer_images.name IS NOT NULL THEN
+					CONCAT ( '/upload/".$dbal->table(ProductOfferImage::class)."' , '/', product_offer_images.name)
+			   WHEN product_photo.name IS NOT NULL THEN
+					CONCAT ( '/upload/".$dbal->table(ProductPhoto::class)."' , '/', product_photo.name)
+			   ELSE NULL
+			END AS product_image
+		"
+        );
+
+        /** Расширение изображения */
+        $dbal->addSelect(
+            '
+            COALESCE(
+                product_variation_image.ext,
+                product_offer_images.ext,
+                product_photo.ext
+            ) AS product_image_ext'
+        );
+
+        /** Флаг загрузки файла CDN */
+        $dbal->addSelect(
+            '
+            COALESCE(
+                product_variation_image.cdn,
+                product_offer_images.cdn,
+                product_photo.cdn
+            ) AS product_image_cdn'
+        );
+
+        /**
+         * Product Invariable
+         */
+        $dbal
+            ->addSelect('product_invariable.id AS invariable')
+            ->join(
+                'product_modification',
+                ProductInvariable::class,
+                'product_invariable',
+                '
+                    product_invariable.product = product.id AND
+                    (
+                        (product_offer.const IS NOT NULL AND product_invariable.offer = product_offer.const) OR
+                        (product_offer.const IS NULL AND product_invariable.offer IS NULL)
+                    )
+                    AND
+                    (
+                        (product_variation.const IS NOT NULL AND product_invariable.variation = product_variation.const) OR
+                        (product_variation.const IS NULL AND product_invariable.variation IS NULL)
+                    )
+                   AND
+                   (
+                        (product_modification.const IS NOT NULL AND product_invariable.modification = product_modification.const) OR
+                        (product_modification.const IS NULL AND product_invariable.modification IS NULL)
+                   )
+            ');
+
+        /** Продукт Яндекс Маркет */
+        $dbal
+            ->addSelect('ya_market_product.id as ya_market_product_id')
+            ->leftJoin(
+                'product_invariable',
+                YandexMarketProduct::class,
+                'ya_market_product',
+                'ya_market_product.invariable = product_invariable.id'
+            );
+
+        $dbal->leftJoin(
+            'ya_market_product',
+            YandexMarketProductImage::class,
+            'ya_market_product_images',
+            '
+                ya_market_product_images.market = ya_market_product.id AND
+                ya_market_product_images.root = true
+            '
+        );
+
+        $dbal->addSelect(
+            "
+            CASE
+                WHEN ya_market_product_images.name IS NOT NULL THEN
+                    CONCAT ( '/upload/".$dbal->table(YandexMarketProductImage::class)."' , '/', ya_market_product_images.name)
+                ELSE NULL 
+            END as ya_market_product_image
+            "
+        );
+
+        /** Расширение изображения */
+        $dbal->addSelect('
+			CASE
+			   WHEN ya_market_product_images.name IS NOT NULL THEN
+					ya_market_product_images.ext
+			   ELSE NULL
+			END AS ya_market_product_image_ext
+		');
+
+        /** Флаг загрузки файла CDN */
+        $dbal->addSelect('
+			CASE
+			   WHEN ya_market_product_images.name IS NOT NULL THEN
+					ya_market_product_images.cdn
+			   ELSE NULL
+			END AS ya_market_product_image_cdn
+		');
+
+        /**
+         * Категория
+         */
+        $dbal
+            ->join(
+                'product_event',
+                ProductCategory::class,
+                'product_category',
+                '
+                    product_category.event = product_event.id AND 
+                    product_category.root = true'
+            );
+
+        if($this->filter?->getCategory())
+        {
+            $dbal->andWhere('product_category.category = :category');
+            $dbal->setParameter('category', $this->filter->getCategory(), CategoryProductUid::TYPE);
+        }
+
+        $dbal->join(
+            'product_category',
+            CategoryProduct::class,
+            'category',
+            'category.id = product_category.category'
+        );
+
+        /** Только активные разделы */
+        $dbal
+            ->addSelect('category_info.active as category_active')
+            ->join(
+                'product_category',
+                CategoryProductInfo::class,
+                'category_info',
+                '
+                    category.event = category_info.event AND
+                    category_info.active IS TRUE'
+            );
+
+        $dbal
+            ->addSelect('category_trans.name AS category_name')
+            ->leftJoin(
+                'category',
+                CategoryProductTrans::class,
+                'category_trans',
+                '
+                    category_trans.event = category.event AND 
+                    category_trans.local = :local'
+            );
+
+        /**
+         * Фильтр по свойства продукта
+         */
+        if($this->filter?->getProperty())
+        {
+            /** @var ProductFilterPropertyDTO $property */
+            foreach($this->filter->getProperty() as $property)
+            {
+                if($property->getValue())
+                {
+                    $dbal->join(
+                        'product',
+                        ProductProperty::class,
+                        'product_property_'.$property->getType(),
+                        'product_property_'.$property->getType().'.event = product.event AND
+                        product_property_'.$property->getType().'.field = :'.$property->getType().'_const AND
+                        product_property_'.$property->getType().'.value = :'.$property->getType().'_value'
+                    );
+
+                    $dbal->setParameter($property->getType().'_const', $property->getConst());
+                    $dbal->setParameter($property->getType().'_value', $property->getValue());
+                    $dbal->setParameter($property->getType().'_value', $property->getValue());
+                }
+            }
+        }
+
+        if($this->yandexMarketProductsFilter->getExists() !== null)
+        {
+            if($this->yandexMarketProductsFilter->getExists() === true)
+            {
+                $dbal->andWhere('ya_market_images.name IS NOT NULL');
+            }
+            else
+            {
+                $dbal->andWhere('ya_market_images.name IS NULL');
+            }
+        }
+
+        if($this->search?->getQuery())
+        {
+            /** Поиск по модификации */
+            $result = $this->elasticGetIndex ? $this->elasticGetIndex->handle(
+                ProductModification::class,
+                $this->search->getQuery(),
+                1
+            ) : false;
+
+            if($result)
+            {
+                $counter = $result['hits']['total']['value'];
+
+                if($counter)
+                {
+                    /** Идентификаторы */
+                    $data = array_column($result['hits']['hits'], "_source");
+
+                    $dbal
+                        ->createSearchQueryBuilder($this->search)
+                        ->addSearchInArray('product_modification.id', array_column($data, "id"));
+
+                    return $this->paginator->fetchAllAssociative($dbal);
+                }
+
+                /** Поиск по продукции */
+                $result = $this->elasticGetIndex->handle(Product::class, $this->search->getQuery(), 1);
+
+                $counter = $result['hits']['total']['value'];
+
+                if($counter)
+                {
+                    /** Идентификаторы */
+                    $data = array_column($result['hits']['hits'], "_source");
+
+                    $dbal
+                        ->createSearchQueryBuilder($this->search)
+                        ->addSearchInArray('product.id', array_column($data, "id"));
+
+                    return $this->paginator->fetchAllAssociative($dbal);
+                }
+            }
+
+            $dbal
+                ->createSearchQueryBuilder($this->search)
+                ->addSearchEqualUid('account.id')
+                ->addSearchEqualUid('account.event')
+                ->addSearchLike('product_trans.name')
+                ->addSearchLike('product_info.article')
+                ->addSearchLike('product_offer.article')
+                ->addSearchLike('product_modification.article')
+                ->addSearchLike('product_variation.article');
+        }
+
+        return $this->paginator->fetchAllHydrate($dbal, AllProductsWithYandexMarketImagesResult::class);
+    }
+}
\ No newline at end of file
Index: Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesResult.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesResult.php b/Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesResult.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Repository/AllProductsWithYandexMarketImage/AllProductsWithYandexMarketImagesResult.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,218 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Repository\AllProductsWithYandexMarketImage;
+
+use BaksDev\Products\Product\Type\Event\ProductEventUid;
+use BaksDev\Products\Product\Type\Id\ProductUid;
+use BaksDev\Products\Product\Type\Invariable\ProductInvariableUid;
+use BaksDev\Products\Product\Type\Offers\ConstId\ProductOfferConst;
+use BaksDev\Products\Product\Type\Offers\Id\ProductOfferUid;
+use BaksDev\Products\Product\Type\Offers\Variation\ConstId\ProductVariationConst;
+use BaksDev\Products\Product\Type\Offers\Variation\Id\ProductVariationUid;
+use BaksDev\Products\Product\Type\Offers\Variation\Modification\ConstId\ProductModificationConst;
+use BaksDev\Products\Product\Type\Offers\Variation\Modification\Id\ProductModificationUid;
+use Symfony\Component\DependencyInjection\Attribute\Exclude;
+
+#[Exclude]
+final readonly class AllProductsWithYandexMarketImagesResult
+{
+    public function __construct(
+        private string $id,
+        private string $event,
+        private string $invariable,
+        private bool $category_active,
+        private string $category_name,
+        private string $product_name,
+        private ?string $product_offer_id = null,
+        private ?string $product_offer_value = null,
+        private ?string $product_offer_const = null,
+        private ?string $product_offer_postfix = null,
+        private ?string $product_offer_reference = null,
+        private ?string $product_variation_id = null,
+        private ?string $product_variation_value = null,
+        private ?string $product_variation_const = null,
+        private ?string $product_variation_postfix = null,
+        private ?string $product_variation_reference = null,
+        private ?string $product_modification_id = null,
+        private ?string $product_modification_value = null,
+        private ?string $product_modification_const = null,
+        private ?string $product_modification_postfix = null,
+        private ?string $product_modification_reference = null,
+        private ?string $product_article = null,
+        private ?string $product_image = null,
+        private ?string $product_image_ext = null,
+        private ?bool $product_image_cdn = null,
+        private ?string $ya_market_product_id = null,
+        private ?string $ya_market_product_image = null,
+        private ?string $ya_market_product_image_ext = null,
+        private ?bool $ya_market_product_image_cdn = null,
+    ) {}
+
+    public function getId(): ProductUid
+    {
+        return new ProductUid($this->id);
+    }
+
+    public function getEvent(): ProductEventUid
+    {
+        return new ProductEventUid($this->event);
+    }
+
+    public function getInvariable(): ProductInvariableUid
+    {
+        return new ProductInvariableUid($this->invariable);
+    }
+
+    public function getProductName(): string
+    {
+        return $this->product_name;
+    }
+
+    public function getProductOfferId(): ?ProductOfferUid
+    {
+        return new ProductOfferUid($this->product_offer_id);
+    }
+
+    public function getProductOfferValue(): ?string
+    {
+        return $this->product_offer_value;
+    }
+
+    public function getProductOfferConst(): ?ProductOfferConst
+    {
+        return new ProductOfferConst($this->product_offer_const);
+    }
+
+    public function getProductOfferPostfix(): ?string
+    {
+        return $this->product_offer_postfix;
+    }
+
+    public function getProductOfferReference(): ?string
+    {
+        return $this->product_offer_reference;
+    }
+
+    public function getProductVariationId(): ?ProductVariationUid
+    {
+        return new ProductVariationUid($this->product_variation_id);
+    }
+
+    public function getProductVariationValue(): ?string
+    {
+        return $this->product_variation_value;
+    }
+
+    public function getProductVariationConst(): ?ProductVariationConst
+    {
+        return new ProductVariationConst($this->product_variation_const);
+    }
+
+    public function getProductVariationPostfix(): ?string
+    {
+        return $this->product_variation_postfix;
+    }
+
+    public function getProductVariationReference(): ?string
+    {
+        return $this->product_variation_reference;
+    }
+
+    public function getProductModificationId(): ?ProductModificationUid
+    {
+        return new ProductModificationUid($this->product_modification_id);
+    }
+
+    public function getProductModificationValue(): ?string
+    {
+        return $this->product_modification_value;
+    }
+
+    public function getProductModificationConst(): ?ProductModificationConst
+    {
+        return new ProductModificationConst($this->product_modification_const);
+    }
+
+    public function getProductModificationPostfix(): ?string
+    {
+        return $this->product_modification_postfix;
+    }
+
+    public function getProductModificationReference(): ?string
+    {
+        return $this->product_modification_reference;
+    }
+
+    public function getProductArticle(): ?string
+    {
+        return $this->product_article;
+    }
+
+    public function getProductImage(): ?string
+    {
+        return $this->product_image;
+    }
+
+    public function getProductImageExt(): ?string
+    {
+        return $this->product_image_ext;
+    }
+
+    public function getProductImageCdn(): ?bool
+    {
+        return $this->product_image_cdn;
+    }
+
+    public function getYaMarketProductId(): ?string
+    {
+        return $this->ya_market_product_id;
+    }
+
+    public function getYandexMarketProductImage(): ?string
+    {
+        return $this->ya_market_product_image;
+    }
+
+    public function getYandexMarketProductImageExt(): ?string
+    {
+        return $this->ya_market_product_image_ext;
+    }
+
+    public function getYandexMarketProductImageCdn(): ?bool
+    {
+        return $this->ya_market_product_image_cdn;
+    }
+
+    public function getCategoryActive(): bool
+    {
+        return $this->category_active;
+    }
+
+    public function getCategoryName(): string
+    {
+        return $this->category_name;
+    }
+}
Index: Resources/assets/yandex-market-products/filter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/assets/yandex-market-products/filter.js b/Resources/assets/yandex-market-products/filter.js
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/assets/yandex-market-products/filter.js	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,40 @@
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+executeFunc(function yandexMarketProductsFunction()
+{
+    if(typeof formDebounce !== 'function')
+    {
+        return false;
+    }
+
+    const form = document.forms.yandex_market_products_filter_form;
+
+    if(typeof form === 'undefined')
+    {
+        return false;
+    }
+
+    form.addEventListener('change', formDebounce(() => { form.submit(); }, 300));
+
+    return true;
+})
Index: Resources/assets/yandex-market-products/filter.min.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/assets/yandex-market-products/filter.min.js b/Resources/assets/yandex-market-products/filter.min.js
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/assets/yandex-market-products/filter.min.js	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,1 @@
+executeFunc((function yandexMarketProductsFunction(){if(typeof formDebounce!=="function"){return false}const form=document.forms.yandex_market_products_filter_form;if(typeof form==="undefined"){return false}form.addEventListener("change",formDebounce((()=>{form.submit()}),300));return true}));
\ No newline at end of file
Index: Resources/assets/yandex-market-products/script.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/assets/yandex-market-products/script.js b/Resources/assets/yandex-market-products/script.js
--- a/Resources/assets/yandex-market-products/script.js	(revision c7e6f7d346de53ca624f846eae41ab2e7a2851a2)
+++ b/Resources/assets/yandex-market-products/script.js	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -1,5 +1,5 @@
 /*
- *  Copyright 2024.  Baks.dev <admin@baks.dev>
+ *  Copyright 2025.  Baks.dev <admin@baks.dev>
  *
  *  Permission is hereby granted, free of charge, to any person obtaining a copy
  *  of this software and associated documentation files (the "Software"), to deal
Index: Resources/assets/yandex-market-products/yandex-market.images.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/assets/yandex-market-products/yandex-market.images.js b/Resources/assets/yandex-market-products/yandex-market.images.js
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/assets/yandex-market-products/yandex-market.images.js	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,223 @@
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+executeFunc(function init()
+{
+    /* кнопка Добавить ФОТО */
+    let $addImageButton = document.getElementById('photo_addCollection');
+
+    /* Блок для новой коллекции */
+    let $blockCollectionPhoto = document.getElementById('photo_collection');
+
+    if($addImageButton === null)
+    {
+        return false;
+    }
+
+    /* удаление блока из коллекции изображений */
+    let $delItemPhoto = $blockCollectionPhoto.querySelectorAll('.del-item-photo');
+
+    $delItemPhoto.forEach(function(item)
+    {
+        item.addEventListener('click', function()
+        {
+
+            let $counter = $blockCollectionPhoto.getElementsByClassName('item-collection-photo').length;
+
+            if($counter > 0)
+            {
+                item.closest('.item-collection-photo').remove();
+            }
+
+
+            let photo_collection = document.getElementById('photo_collection');
+
+
+            let isRoot = false;
+
+            photo_collection.querySelectorAll('.change-root').forEach(function(rootCheck)
+            {
+                if(rootCheck.checked === true)
+                {
+                    isRoot = true;
+                }
+            });
+
+
+            if(isRoot === false)
+            {
+                photo_collection.querySelectorAll('.change-root').forEach(function(rootCheck, i)
+                {
+                    if(i === 0)
+                    {
+                        rootCheck.checked = true;
+                        return true;
+                    }
+                });
+            }
+        });
+    });
+
+    /* изменение чекбокса*/
+    let $changeRootPhoto = $blockCollectionPhoto.querySelectorAll('.change-root');
+
+    $changeRootPhoto.forEach(function(item)
+    {
+
+        if($changeRootPhoto.length === 1 && item.checked === false)
+        {
+            item.checked = true;
+        }
+
+        item.addEventListener('change', function()
+        {
+
+            let photo_collection = document.getElementById('photo_collection');
+
+            photo_collection.querySelectorAll('.change-root').forEach(function(rootCheck)
+            {
+                rootCheck.checked = false;
+            });
+
+            this.checked = true;
+        });
+
+    });
+
+    let uploadedFile = $blockCollectionPhoto.querySelectorAll('input[type="file"]');
+
+    uploadedFile.forEach(function(item)
+    {
+
+        item.addEventListener('change', function(e)
+        {
+
+            let newFile = item.files[0];
+            let reader = new FileReader();
+            // let image = item.parentNode.parentNode;
+            let image = item.closest('.image-input');
+
+            reader.onloadend = function()
+            {
+                image.style.setProperty("background-image", "url(" + reader.result + ")", "important")
+            }
+
+            if(newFile)
+            {
+                reader.readAsDataURL(newFile);
+            } else
+            {
+                image.style.setProperty("background-image", "url(/img/blank.svg)", "important")
+            }
+        });
+    });
+
+    /* Добавляем новую коллекцию */
+    $addImageButton.addEventListener('click', function()
+    {
+
+        let $addImageButton = this;
+
+        /* получаем прототип коллекции  */
+        let newPrototype = document.getElementById($addImageButton.dataset.prototype).dataset.prototype;
+        let index = $addImageButton.dataset.index * 1;
+
+        if(index === 8)
+        {
+            return;
+        }
+
+        /* Замена '__name__' в HTML-коде прототипа число, основанное на том, сколько коллекций */
+        newPrototype = newPrototype.replace(/__images__/g, index);
+
+        /* Вставляем новую коллекцию */
+        let div = document.createElement('div');
+        div.classList.add('item-collection-photo')
+        div.innerHTML = newPrototype;
+        $blockCollectionPhoto.append(div);
+
+        /* Удаляем при клике коллекцию СЕКЦИЙ */
+        div.querySelector('.del-item-photo').addEventListener('click', function()
+        {
+            let $counter = $blockCollectionPhoto.getElementsByClassName('item-collection-photo').length;
+            this.closest('.item-collection-photo').remove();
+            let index = $addImageButton.dataset.index * 1;
+            $addImageButton.dataset.index = (index - 1).toString()
+        });
+
+        let images = photo_collection.querySelectorAll('.change-root');
+
+        if(images.length === 1)
+        {
+            let photo_collection = document.getElementById('photo_collection');
+
+            photo_collection.querySelectorAll('.change-root').forEach(function(rootChack, i, arr)
+            {
+                rootChack.checked = true;
+            });
+        }
+
+        div.querySelector('.change-root').addEventListener('change', function(selector)
+        {
+
+            let photo_collection = document.getElementById('photo_collection');
+
+            photo_collection.querySelectorAll('.change-root').forEach(function(rootChack, i, arr)
+            {
+                rootChack.checked = false;
+            });
+
+            this.checked = true;
+        });
+
+        /* Увеличиваем data-index на 1 после вставки новой коллекции */
+        $addImageButton.dataset.index = (index + 1).toString();
+
+        /* загрузка изображения */
+        let inputElement = div.querySelector('input[type="file"]');
+
+        inputElement.addEventListener('change', function(e)
+        {
+
+            let file = inputElement.files[0];
+            let reader = new FileReader();
+            let image = div.querySelector('.image-input');
+
+            reader.onloadend = function()
+            {
+
+                image.style.setProperty("background-image", "url(" + reader.result + ")", "important")
+            }
+
+            if(file)
+            {
+                reader.readAsDataURL(file);
+            } else
+            {
+                image.style.setProperty("background-image", "url(/img/blank.svg)", "important")
+            }
+        });
+    });
+
+    return true;
+
+});
Index: Resources/assets/yandex-market-products/yandex-market.images.min.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/assets/yandex-market-products/yandex-market.images.min.js b/Resources/assets/yandex-market-products/yandex-market.images.min.js
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/assets/yandex-market-products/yandex-market.images.min.js	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,1 @@
+executeFunc((function init(){let $addImageButton=document.getElementById("photo_addCollection");let $blockCollectionPhoto=document.getElementById("photo_collection");if($addImageButton===null){return false}let $delItemPhoto=$blockCollectionPhoto.querySelectorAll(".del-item-photo");$delItemPhoto.forEach((function(item){item.addEventListener("click",(function(){let $counter=$blockCollectionPhoto.getElementsByClassName("item-collection-photo").length;if($counter>0){item.closest(".item-collection-photo").remove()}let photo_collection=document.getElementById("photo_collection");let isRoot=false;photo_collection.querySelectorAll(".change-root").forEach((function(rootCheck){if(rootCheck.checked===true){isRoot=true}}));if(isRoot===false){photo_collection.querySelectorAll(".change-root").forEach((function(rootCheck,i){if(i===0){rootCheck.checked=true;return true}}))}}))}));let $changeRootPhoto=$blockCollectionPhoto.querySelectorAll(".change-root");$changeRootPhoto.forEach((function(item){if($changeRootPhoto.length===1&&item.checked===false){item.checked=true}item.addEventListener("change",(function(){let photo_collection=document.getElementById("photo_collection");photo_collection.querySelectorAll(".change-root").forEach((function(rootCheck){rootCheck.checked=false}));this.checked=true}))}));let uploadedFile=$blockCollectionPhoto.querySelectorAll('input[type="file"]');uploadedFile.forEach((function(item){item.addEventListener("change",(function(e){let newFile=item.files[0];let reader=new FileReader;let image=item.closest(".image-input");reader.onloadend=function(){image.style.setProperty("background-image","url("+reader.result+")","important")};if(newFile){reader.readAsDataURL(newFile)}else{image.style.setProperty("background-image","url(/img/blank.svg)","important")}}))}));$addImageButton.addEventListener("click",(function(){let $addImageButton=this;let newPrototype=document.getElementById($addImageButton.dataset.prototype).dataset.prototype;let index=$addImageButton.dataset.index*1;if(index===8){return}newPrototype=newPrototype.replace(/__images__/g,index);let div=document.createElement("div");div.classList.add("item-collection-photo");div.innerHTML=newPrototype;$blockCollectionPhoto.append(div);div.querySelector(".del-item-photo").addEventListener("click",(function(){let $counter=$blockCollectionPhoto.getElementsByClassName("item-collection-photo").length;this.closest(".item-collection-photo").remove();let index=$addImageButton.dataset.index*1;$addImageButton.dataset.index=(index-1).toString()}));let images=photo_collection.querySelectorAll(".change-root");if(images.length===1){let photo_collection=document.getElementById("photo_collection");photo_collection.querySelectorAll(".change-root").forEach((function(rootChack,i,arr){rootChack.checked=true}))}div.querySelector(".change-root").addEventListener("change",(function(selector){let photo_collection=document.getElementById("photo_collection");photo_collection.querySelectorAll(".change-root").forEach((function(rootChack,i,arr){rootChack.checked=false}));this.checked=true}));$addImageButton.dataset.index=(index+1).toString();let inputElement=div.querySelector('input[type="file"]');inputElement.addEventListener("change",(function(e){let file=inputElement.files[0];let reader=new FileReader;let image=div.querySelector(".image-input");reader.onloadend=function(){image.style.setProperty("background-image","url("+reader.result+")","important")};if(file){reader.readAsDataURL(file)}else{image.style.setProperty("background-image","url(/img/blank.svg)","important")}}))}));return true}));
\ No newline at end of file
Index: Resources/config/doctrine.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/config/doctrine.php b/Resources/config/doctrine.php
--- a/Resources/config/doctrine.php	(revision c7e6f7d346de53ca624f846eae41ab2e7a2851a2)
+++ b/Resources/config/doctrine.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -28,6 +28,10 @@
 use BaksDev\Yandex\Market\Products\Type\Card\Event\YaMarketProductsCardEventUid;
 use BaksDev\Yandex\Market\Products\Type\Card\Id\YaMarketProductsCardType;
 use BaksDev\Yandex\Market\Products\Type\Card\Id\YaMarketProductsCardUid;
+use BaksDev\Yandex\Market\Products\Type\Id\YandexMarketProductType;
+use BaksDev\Yandex\Market\Products\Type\Id\YandexMarketProductUid;
+use BaksDev\Yandex\Market\Products\Type\Image\YandexMarketProductImageType;
+use BaksDev\Yandex\Market\Products\Type\Image\YandexMarketProductImageUid;
 use BaksDev\Yandex\Market\Products\Type\Settings\Event\YaMarketProductsSettingsEventType;
 use BaksDev\Yandex\Market\Products\Type\Settings\Event\YaMarketProductsSettingsEventUid;
 use BaksDev\Yandex\Market\Products\Type\Settings\Property\YaMarketProductProperty;
@@ -42,6 +46,9 @@
     $doctrine->dbal()->type(YaMarketProductsCardUid::TYPE)->class(YaMarketProductsCardType::class);
     $doctrine->dbal()->type(YaMarketProductsCardEventUid::TYPE)->class(YaMarketProductsCardEventType::class);
 
+    $doctrine->dbal()->type(YandexMarketProductUid::TYPE)->class(YandexMarketProductType::class);
+    $doctrine->dbal()->type(YandexMarketProductImageUid::TYPE)->class(YandexMarketProductImageType::class);
+
 
     $emDefault = $doctrine->orm()->entityManager('default')->autoMapping(true);
 
Index: Resources/translations/admin/yandex-market-products.admin.en.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/translations/admin/yandex-market-products.admin.en.yaml b/Resources/translations/admin/yandex-market-products.admin.en.yaml
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/translations/admin/yandex-market-products.admin.en.yaml	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,26 @@
+page:
+  index: 'Product settings for Yandex Market'
+  new: 'Add products for Yandex Market'
+  edit: 'Edit products for Yandex Market'
+  delete: 'Delete products for Yandex Market'
+
+breadcrumb:
+  index: 'Product settings for Yandex Market'
+  new: 'Add products for Yandex Market'
+  edit: 'Edit products for Yandex Market'
+  delete: 'Delete products for Yandex Market'
+
+success:
+  new: 'Product settings for Yandex Market have been successfully added'
+  edit: 'Product settings for Yandex Market have been successfully updated'
+  delete: 'Product settings for Yandex Market were successfully deleted'
+  restore: 'Product settings for Yandex Market have been successfully restored'
+
+danger:
+  new: '%s: Error adding product settings for Yandex Market'
+  edit: '%s: Error when updating product settings for Yandex Market'
+  delete: '%s: Error updating product settings for Yandex Market'
+  restore: '%s: Error while restoring product settings for Yandex Market'
+form:
+  delete:
+    h4: 'Are you sure you want to delete product settings for Yandex Market?'
\ No newline at end of file
Index: Resources/translations/admin/yandex-market-products.admin.ru.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/translations/admin/yandex-market-products.admin.ru.yaml b/Resources/translations/admin/yandex-market-products.admin.ru.yaml
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/translations/admin/yandex-market-products.admin.ru.yaml	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,26 @@
+page:
+  index: 'Настройка продукции для Yandex Market'
+  new: 'Добавить продукцию для Yandex Market'
+  edit: 'Редактировать продукцию для Yandex Market'
+  delete: 'Удалить продукцию для Yandex Market'
+
+breadcrumb:
+  index: 'Настройки продукции для Yandex Market'
+  new: 'Добавить продукцию для Yandex Market'
+  edit: 'Редактировать продукцию для Yandex Market'
+  delete: 'Удалить продукцию для Yandex Market'
+
+success:
+  new: 'Настройки продукции для Yandex Market успешно добавлены'
+  edit: 'Настройки продукции для Yandex Market успешно обновлены'
+  delete: 'Настройки продукции для Yandex Market успешно удалены'
+  restore: 'Настройки продукции для Yandex Market успешно восстановлены'
+
+danger:
+  new: '%s: Ошибка при добавлении настройки продукции для Yandex Market'
+  edit: '%s: Ошибка при обновлении настройки продукции для Yandex Market'
+  delete: '%s: Ошибка при обновлении настройки продукции для Yandex Market'
+  restore: '%s: Ошибка при восстановлении настройки продукции для Yandex Market'
+form:
+  delete:
+    h4: 'Вы уверены, что желаете удалить настройки продукции для Yandex Market?'
Index: Resources/translations/security/security.en.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/translations/security/security.en.yaml b/Resources/translations/security/security.en.yaml
--- a/Resources/translations/security/security.en.yaml	(revision c7e6f7d346de53ca624f846eae41ab2e7a2851a2)
+++ b/Resources/translations/security/security.en.yaml	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -1,12 +1,27 @@
 # Role
+ROLE_YA_MARKET_PRODUCTS:
+  header: 'Yandex Market products settings'
+  name: 'Yandex Market product settings'
+  desc: 'Yandex Market product settings'
+
+# Rules
+ROLE_YA_MARKET_PRODUCTS_INDEX:
+  name: 'Yandex Market products settings'
+  desc: 'Yandex Market products settings'
 
+ROLE_YA_MARKET_PRODUCTS_EDIT:
+  name: 'Edit'
+  desc: ''
+
+
+# Role
 ROLE_YA_MARKET_PRODUCTS_SETTING:
   header: 'Yandex Market'
   name: 'Yandex Market property relationships'
   desc: 'Yandex Market data correlation settings'
 
+
 # Rules
-
 ROLE_YA_MARKET_PRODUCTS_SETTING_INDEX:
   name: 'View'
   desc: ''
@@ -24,12 +39,14 @@
   desc: ''
 
 
-
+# Role
 ROLE_YA_MARKET_PRODUCTS_CARD:
   header: 'Yandex Market'
   name: 'Product cards'
   desc: 'Yandex Market product cards'
 
+
+# Rules
 ROLE_YA_MARKET_PRODUCTS_CARD_INDEX:
   name: 'View'
   desc: ''
@@ -46,7 +63,6 @@
   name: 'Delete'
   desc: ''
 
-
 ROLE_YA_MARKET_PRODUCTS_CARD_GET:
   name: 'Get new'
   desc: 'Get new cards from the Market'
Index: Resources/translations/security/security.ru.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/translations/security/security.ru.yaml b/Resources/translations/security/security.ru.yaml
--- a/Resources/translations/security/security.ru.yaml	(revision c7e6f7d346de53ca624f846eae41ab2e7a2851a2)
+++ b/Resources/translations/security/security.ru.yaml	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -1,3 +1,28 @@
+# Роль
+ROLE_YA_MARKET_PRODUCTS:
+  header: 'Настройки продукта Яндекс Маркет'
+  name: 'Настройки продукта Яндекс Маркет'
+  desc: 'Настройки продукта Яндекс Маркет'
+
+
+# Правила
+ROLE_YA_MARKET_PRODUCTS_INDEX:
+  name: 'Настройки продукта Яндекс Маркет'
+  desc: 'Настройки продукта Яндекс Маркет'
+
+ROLE_YA_MARKET_PRODUCTS_NEW:
+  name: 'Добавить'
+  desc: ''
+
+ROLE_YA_MARKET_PRODUCTS_EDIT:
+  name: 'Редактировать'
+  desc: ''
+
+ROLE_YA_MARKET_PRODUCTS_DELETE:
+  name: 'Удалить'
+  desc: ''
+
+
 # Роль
 
 ROLE_YA_MARKET_PRODUCTS_SETTING:
Index: Resources/view/admin/products/edit/mobile/content.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/edit/mobile/content.html.twig b/Resources/view/admin/products/edit/mobile/content.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/edit/mobile/content.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,1 @@
+<div>Временно недоступно</div>
\ No newline at end of file
Index: Resources/view/admin/products/edit/pc/content.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/edit/pc/content.html.twig b/Resources/view/admin/products/edit/pc/content.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/edit/pc/content.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,102 @@
+{% trans_default_domain 'yandex-market-products.admin' %}
+
+<div class="modal-dialog modal-dialog-centered " style="max-width: 850px;">
+
+    {% if product %}
+
+        {% set arr_property = product.getCategorySectionField()|json_decode %}
+
+        {{ form_start(form) }}
+
+        <div class="modal-content p-3 border-bottom border-5 border-primary">
+
+            {# Заголовок модального окна #}
+            {{ include('@yandex-market-products/admin/products/edit/pc/header.html.twig') }}
+
+            {# Табы #}
+            <ul class="nav nav-pills gap-3 mb-3 mt-3" id="nav-yandex-market-product">
+
+                <li class="nav-item" role="presentation">
+                    <button class="btn fw-bolder nav-link active"
+                            data-bs-toggle="tab"
+                            type="button"
+                            role="tab"
+                            aria-selected="true"
+
+                            id="tab_images-tab"
+                            data-bs-target="#tab_images"
+                            aria-controls="nav-yandex-market-product"
+                    >
+                        <small class="text-uppercase px-3">
+                            Изображения
+                        </small>
+                    </button>
+                </li>
+
+            </ul>
+
+            <div class="tab-content">
+
+                {# Изображения #}
+                <div class="tab-pane fade show active" id="tab_images" role="tabpanel">
+                    {{ include('@yandex-market-products/admin/products/edit/pc/images.html.twig') }}
+                </div>
+
+            </div>
+
+            {# Кнопки формы #}
+            <div class="modal-footer ">
+                <div class="flex-grow-1">
+                    &nbsp;
+                </div>
+                <div class="mt-3 gap-3 d-flex">
+                    {# Отмена #}
+                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">
+                        {{ 'btn.cancel'|trans({}, 'core.btn') }}
+                    </button>
+
+                    {# Сохранить #}
+                    {{ form_widget(form.yandex_market_product, { label:
+                        '<span>'~ 'btn.save'|trans({}, 'core.btn') ~'</span>
+                         <span class="spinner-border spinner-border-sm vertical-middle d-none"></span>'}) }}
+                </div>
+            </div>
+
+        </div>
+
+        {# Прототип формы для изображения #}
+        <div id="prototype.gallery.image"
+             data-prototype="{{ include(_self|replace({ "content.html.twig": "prototype.image.html.twig" }))|e('html_attr') }}">
+        </div>
+
+        {{ form_end(form) }}
+
+    {% else %}
+
+        <div class="modal-content p-3 border-bottom border-5 border-primary">
+
+            <div class="modal-header">
+                <h5 class="modal-title">
+                    Ошибка товара
+                </h5>
+            </div>
+
+            <div class="modal-body p-3">
+                Данного товара не существует!
+            </div>
+
+            <div class="modal-footer ">
+                <div class="mt-3 gap-3 d-flex">
+                    {# Отмена #}
+                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">
+                        {{ 'btn.cancel'|trans({}, 'core.btn') }}
+                    </button>
+                </div>
+            </div>
+
+        </div>
+
+    {% endif %}
+
+</div>
+
Index: Resources/view/admin/products/edit/pc/header.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/edit/pc/header.html.twig b/Resources/view/admin/products/edit/pc/header.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/edit/pc/header.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,87 @@
+{% trans_default_domain 'yandex-market-products.admin' %}
+
+<!--
+  ~ Copyright 2025.  Baks.dev <admin@baks.dev>
+  ~
+  ~  Permission is hereby granted, free of charge, to any person obtaining a copy
+  ~  of this software and associated documentation files (the "Software"), to deal
+  ~  in the Software without restriction, including without limitation the rights
+  ~  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+  ~  copies of the Software, and to permit persons to whom the Software is furnished
+  ~  to do so, subject to the following conditions:
+  ~
+  ~  The above copyright notice and this permission notice shall be included in all
+  ~  copies or substantial portions of the Software.
+  ~
+  ~  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+  ~  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+  ~  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+  ~  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+  ~  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+  ~  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+  ~  THE SOFTWARE.
+  -->
+
+<div class="modal-header">
+
+    <div class="d-flex gap-3">
+
+        {# Обложка  #}
+        <div>
+            {% set image_path = '/assets/img/blank.svg' %}
+
+            {% if product.getProductImageExt() is defined and product.getProductImageExt() is not null %}
+            {% set img_host =  product.getProductImageCdn() == true  ? CDN_HOST : '' %}
+            {% set img_dir = product.getProductImage() %}
+            {% set img_file = (img_host is empty ? '/image.' : '/small.') ~ product.getProductImageExt() %}
+            {% set image_path = img_host ~ img_dir ~ img_file %}
+            {% endif %}
+
+            <div class="icon rounded-3 bg-contain lazy p-1" style="width: 50px; height: 50px;"
+                 data-bg="{{ image_path }}">
+            </div>
+        </div>
+
+        {# Название продукта  #}
+        <div class="d-flex flex-column align-items-start">
+
+            <h5 class="modal-title d-flex align-items-center gap-3">
+
+                {{ product.getProductName() }}
+
+                {# Значение множественного варианта ТП #}
+                {{ product.getProductVariationValue()|call_twig_func(product.getProductVariationReference()~'_render')
+                ~ product.getProductModificationValue()|call_twig_func(product.getProductModificationReference()~'_render') }}
+
+                {# Значение торгового предложения #}
+                {{ product.getProductOfferValue()|call_twig_func(product.getProductOfferReference()~'_render') }}
+
+                {# Постфикс торгового предложения #}
+                {{ product.getProductOfferPostfix() }}
+                {# Постфикс множественного варианта #}
+                {{ product.getProductVariationPostfix() }}
+                {# Постфикс модификации #}
+                {{ product.getProductModificationPostfix() }}
+
+                {# Свойства, учавствующие в названии #}
+                {% for name_property in arr_property | filter(props => props.field_name == true) %}
+                {{ name_property.field_value|call_twig_func(name_property.field_type) }}
+                {% endfor %}
+
+            </h5>
+
+            <div class="d-flex align-items-center gap-3">
+                <span class="small">Артикул: {{ product.getProductArticle() }}</span>
+
+                {# Свойства, учавствующие в превью карточки #}
+                {% for name_property in  arr_property | filter(props => props.field_card is defined and props.field_card == true) %}
+                {{ name_property.field_value|call_twig_func(name_property.field_type~'_render') }}
+                {% endfor %}
+            </div>
+
+        </div>
+    </div>
+
+</div>
+
+
Index: Resources/view/admin/products/edit/pc/images.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/edit/pc/images.html.twig b/Resources/view/admin/products/edit/pc/images.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/edit/pc/images.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,102 @@
+{% trans_default_domain 'yandex-market-products.admin' %}
+
+<div class="card w-100 border-light">
+    <div class="card-header border-light bg-body">
+        <div class="card-title">
+            <h4>
+                Фото
+            </h4>
+        </div>
+    </div>
+
+    {# Изображения #}
+    <div class="card-body">
+        <div id="photo_collection" class="d-flex gap-5 flex-wrap">
+
+            {% set images = form.images %}
+
+            {% for image in images %}
+                <div class="item-collection-photo">
+
+                    {# Обложка #}
+                    {% set image_path = '/assets/img/blank.svg' %}
+
+                    {% if image.vars.data.ext is defined and image.vars.data.ext is not null %}
+
+                        {% set img_host =  image.vars.data.cdn == true  ? CDN_HOST : '' %}
+                        {% set dir = '/upload' %}
+
+                        {# Название таблицы из аттрибутов YandexMarketProductImage #}
+                        {% set img_table = '/ya_market_product_images/' %}
+                        {% set img_dir = image.vars.data.name %}
+                        {% set img_file = (img_host is empty ? '/image.' : '/small.') ~ image.vars.data.ext %}
+                        {% set image_path = img_host ~ dir ~ img_table ~ img_dir ~ img_file %}
+                    {% endif %}
+
+                    <label class="icon rounded-1 bg-contain lazy position-relative image-input"
+                           style="width: 150px; height: 200px;"
+                           data-bg="{{ image_path }}"
+                    >
+
+                        <div class="position-absolute top-0 start-100 rounded-circle border p-2 ms-1 d-flex align-items-center justify-content-center"
+                             style="width: 16px; height: 16px;">
+                            <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10"
+                                 fill="currentColor"
+                                 class="position-absolute text-muted" viewBox="0 0 16 16">
+                                <path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z"/>
+                            </svg>
+                        </div>
+
+                        {{ form_row(image.file, { 'attr'  : { 'class' : 'd-none' } }) }}
+
+                    </label>
+
+
+                    <div class="mt-3 d-flex align-items-center gap-3">
+
+                        <button type="button" class="btn btn-outline-danger border-0 del-item-photo">
+                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
+                                 viewBox="0 0 16 16" class='mb-1'>
+                                <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z"></path>
+                            </svg>
+                        </button>
+
+                        {{ form_widget(image.root, { label: 'Главное',  attr  : { 'class' : 'change-root' } }) }}
+                    </div>
+
+                    {{ form_widget(image.name) }}
+
+                </div>
+
+            {% endfor %}
+        </div>
+
+    </div>
+
+    {# Кнопки загрузки изображения #}
+    <div class="card-footer border-light bg-body d-flex justify-content-between align-items-end">
+
+        <div class="text-muted fs-7">
+            {{ 'Принимаются только файлы изображений .png, .jpg, .jpeg, .gif и .webp'|trans }}
+        </div>
+
+        <button type="button" id="photo_addCollection"
+                class="btn btn-sm btn-outline-primary border-0"
+                data-prototype="prototype.gallery.image"
+                data-index="{{ form.images.count }}"
+        >
+			<span class="svg-icon svg-icon-2">
+				<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
+					<rect opacity="0.5" x="11" y="18" width="12" height="2" rx="1" transform="rotate(-90 11 18)"
+                          fill="currentColor">
+				</rect>
+					<rect x="6" y="11" width="12" height="2" rx="1" fill="currentColor"></rect>
+				</svg>
+			</span>
+            Добавить еще фото
+        </button>
+
+    </div>
+
+</div>
+
Index: Resources/view/admin/products/edit/pc/prototype.image.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/edit/pc/prototype.image.html.twig b/Resources/view/admin/products/edit/pc/prototype.image.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/edit/pc/prototype.image.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,34 @@
+{% trans_default_domain 'yandex-market-products.admin' %}
+
+<label class="icon rounded-1 bg-contain position-relative image-input"
+       style='width: 150px; height: 200px;  background-image: url("/assets/img/blank.svg");"'
+>
+
+    <div class="position-absolute top-0 start-100 rounded-circle border p-2 ms-1 d-flex align-items-center justify-content-center"
+         style="width: 16px; height: 16px;">
+        <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10"
+             fill="currentColor"
+             class="position-absolute text-muted" viewBox="0 0 16 16">
+            <path d="m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001z"/>
+        </svg>
+    </div>
+
+    {{ form_row(form.images.vars.prototype.file, { 'attr'  : { 'class' : 'd-none' } }) }}
+
+</label>
+
+<div class="mt-3 d-flex align-items-center gap-3">
+
+    <button type="button" class="btn btn-outline-danger border-0 del-item-photo">
+        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
+             viewBox="0 0 16 16" class='mb-1'>
+            <path d="M11 1.5v1h3.5a.5.5 0 0 1 0 1h-.538l-.853 10.66A2 2 0 0 1 11.115 16h-6.23a2 2 0 0 1-1.994-1.84L2.038 3.5H1.5a.5.5 0 0 1 0-1H5v-1A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5Zm-5 0v1h4v-1a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5ZM4.5 5.029l.5 8.5a.5.5 0 1 0 .998-.06l-.5-8.5a.5.5 0 1 0-.998.06Zm6.53-.528a.5.5 0 0 0-.528.47l-.5 8.5a.5.5 0 0 0 .998.058l.5-8.5a.5.5 0 0 0-.47-.528ZM8 4.5a.5.5 0 0 0-.5.5v8.5a.5.5 0 0 0 1 0V5a.5.5 0 0 0-.5-.5Z"></path>
+        </svg>
+    </button>
+
+    {{ form_widget(form.images.vars.prototype.root, { label: 'Главное',  attr  : { 'class' : 'change-root' } }) }}
+
+    {{ form_widget(form.images.vars.prototype.name) }}
+
+</div>
+
Index: Resources/view/admin/products/edit/tablet/content.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/edit/tablet/content.html.twig b/Resources/view/admin/products/edit/tablet/content.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/edit/tablet/content.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,1 @@
+<div>Временно недоступно</div>
\ No newline at end of file
Index: Resources/view/admin/products/edit/content.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/edit/content.html.twig b/Resources/view/admin/products/edit/content.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/edit/content.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,9 @@
+<style></style>
+
+{{ include(_self|replace({ "content.html.twig": baks_settings.device~"/content.html.twig" })) }}
+
+{# скрипт будет работать в модальном окне #}
+{% block javascript %}
+<script nonce='{{ csp_nonce() }}' async  data-src="/assets/plugins/ckeditor/classic.min.js?v={{ version }}" class='lazy'></script>
+<script nonce='{{ csp_nonce() }}' async data-src='/assets/yandex-market-products/yandex-market.images.min.js?v={{ version }}' class='lazy'></script>
+{% endblock %}
Index: Resources/view/admin/products/edit/template.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/edit/template.html.twig b/Resources/view/admin/products/edit/template.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/edit/template.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,9 @@
+{# ---- ШАБЛОН ------------------------------------------------------------ #}
+{% extends Template('/admin/base.html.twig') %}
+
+{# ---- КОНТЕНТ-БЛОК ------------------------------------------------------------ #}
+{% block content %}
+
+    {{ include(_self|replace({ "template.html.twig": baks_settings.device~"/content.html.twig" })) }}
+
+{% endblock %}
Index: Resources/view/admin/products/index/mobile/content.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/index/mobile/content.html.twig b/Resources/view/admin/products/index/mobile/content.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/index/mobile/content.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,1 @@
+<div>Временно недоступно</div>
\ No newline at end of file
Index: Resources/view/admin/products/index/pc/breadcrumb.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/index/pc/breadcrumb.html.twig b/Resources/view/admin/products/index/pc/breadcrumb.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/index/pc/breadcrumb.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,42 @@
+{% trans_default_domain 'yandex-market-products.admin' %}
+
+<nav class="small" style="--bs-breadcrumb-divider: '-';" aria-label="breadcrumb">
+    <ol class="breadcrumb small opacity-75">
+        <li>
+            <svg xmlns="http://www.w3.org/2000/svg"
+                 width="15"
+                 height="12"
+                 fill="currentColor"
+                 class="text-primary me-1"
+                 viewBox="0 0 16 16"
+                 style="margin-bottom: 2px;">
+                <path d="M8.707 1.5a1 1 0 0 0-1.414 0L.646 8.146a.5.5 0 0 0 .708.708L8 2.207l6.646 6.647a.5.5 0 0 0 .708-.708L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.707 1.5Z"/>
+                <path d="m8 3.293 6 6V13.5a1.5 1.5 0 0 1-1.5 1.5h-9A1.5 1.5 0 0 1 2 13.5V9.293l6-6Z"/>
+            </svg>
+        </li>
+
+        <li class="breadcrumb-item">
+            <a href="{{ path('core:user.homepage') }}"
+               class="text-decoration-none"
+               aria-label="{{ 'breadcrumb.homepage.user'|trans({}, 'core') }}"
+               title="{{ 'breadcrumb.homepage.user'|trans({}, 'core') }}">
+                {{ 'breadcrumb.homepage.user'|trans({}, 'core') }}
+            </a>
+        </li>
+
+        <li class="breadcrumb-item">
+            <a href="{{ path('core:admin.homepage') }}"
+               class="text-decoration-none"
+               aria-label="{{ 'breadcrumb.homepage.index'|trans({}, 'core') }}"
+               title="{{ 'breadcrumb.homepage.index'|trans({}, 'core') }}">
+                {{ 'breadcrumb.homepage.index'|trans({}, 'core') }}
+            </a>
+        </li>
+
+        <li class="breadcrumb-item active" aria-current="page"
+            aria-label="{{ 'breadcrumb.index'|trans }}"
+            title="{{ 'breadcrumb.index'|trans }}">
+            {{ 'breadcrumb.index'|trans }}
+        </li>
+    </ol>
+</nav>
Index: Resources/view/admin/products/index/pc/card.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/index/pc/card.html.twig b/Resources/view/admin/products/index/pc/card.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/index/pc/card.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,115 @@
+<tr class="vertical-middle">
+
+    <td class="text-nowrap">
+        {# Пользовательское меню редактирования #}
+        {{ include('@yandex-market-products/admin/products/index/pc/usecase.html.twig') }}
+    </td>
+
+    {# Категория  #}
+    <td class="text-center">
+        {{ item.getCategoryName() }}
+    </td>
+
+    {# Продукция  #}
+    <td class="ps-5 align-middle w-100">
+        <div class="d-flex align-items-center gap-2">
+            <a href="{{ path('yandex-market-products:admin.products.edit', {
+                invariable: item.getInvariable()
+            }) }}"
+               data-bs-toggle="modal"
+               data-bs-target="#modal"
+               class="pe-3 modal-link disabled"
+            >
+                {# Обложка #}
+                {% set image_path = '/assets/img/blank.svg' %}
+
+                {% if item.getProductImageExt() is defined and item.getProductImageExt() is not null %}
+                    {% set img_host =  item.getProductImageCdn() == true  ? CDN_HOST : '' %}
+                    {% set img_dir = item.getProductImage() %}
+                    {% set img_file = (img_host is empty ? '/image.' : '/small.') ~ item.getProductImageExt() %}
+                    {% set image_path = img_host ~ img_dir ~ img_file %}
+                {% endif %}
+
+                <div class="icon rounded-3 bg-contain lazy p-1" style="width: 50px; height: 50px; cursor: unset;"
+                     data-bg="{{ image_path }}">
+                </div>
+
+            </a>
+
+            <div>
+
+                {# Название #}
+                <a href="{{ path('yandex-market-products:admin.products.edit', {
+                    invariable: item.getInvariable()
+                }) }}"
+                   class="text-decoration-none mb-1 modal-link disabled fw-bolder text-muted"
+                   data-bs-toggle="modal"
+                   data-bs-target="#modal"
+                   title="Настройки объявления">
+
+                    {{ item.getProductName() }}
+
+                    {# Значение множественного варианта ТП #}
+                    {{ item.getProductVariationValue()|call_twig_func(item.getProductVariationReference()~'_render') ~
+                    item.getProductModificationValue()|call_twig_func(item.getProductModificationReference()~'_render') }}
+
+                    {# Значение торгового предложения #}
+                    {{ item.getProductOfferValue()|call_twig_func(item.getProductOfferReference()~'_render') }}
+
+                    {# Постфикс торгового предложения #}
+                    {{ item.getProductOfferPostfix() }}
+                    {# Постфикс множественного варианта #}
+                    {{ item.getProductVariationPostfix() }}
+                    {# Постфикс модификации #}
+                    {{ item.getProductModificationPostfix() }}
+
+                </a>
+
+                {# Артикул #}
+                <div class="d-flex align-items-center gap-1 text-primary pointer copy small"
+                     data-copy="{{ item.getProductArticle() }}">
+
+                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="14"
+                         height="14" fill="currentColor" viewBox="0 0 115.77 122.88">
+                        <path d="M89.62,13.96v7.73h12.19h0.01v0.02c3.85,0.01,7.34,1.57,9.86,4.1c2.5,2.51,4.06,5.98,4.07,9.82h0.02v0.02 v73.27v0.01h-0.02c-0.01,3.84-1.57,7.33-4.1,9.86c-2.51,2.5-5.98,4.06-9.82,4.07v0.02h-0.02h-61.7H40.1v-0.02 c-3.84-0.01-7.34-1.57-9.86-4.1c-2.5-2.51-4.06-5.98-4.07-9.82h-0.02v-0.02V92.51H13.96h-0.01v-0.02c-3.84-0.01-7.34-1.57-9.86-4.1 c-2.5-2.51-4.06-5.98-4.07-9.82H0v-0.02V13.96v-0.01h0.02c0.01-3.85,1.58-7.34,4.1-9.86c2.51-2.5,5.98-4.06,9.82-4.07V0h0.02h61.7 h0.01v0.02c3.85,0.01,7.34,1.57,9.86,4.1c2.5,2.51,4.06,5.98,4.07,9.82h0.02V13.96L89.62,13.96z M79.04,21.69v-7.73v-0.02h0.02 c0-0.91-0.39-1.75-1.01-2.37c-0.61-0.61-1.46-1-2.37-1v0.02h-0.01h-61.7h-0.02v-0.02c-0.91,0-1.75,0.39-2.37,1.01 c-0.61,0.61-1,1.46-1,2.37h0.02v0.01v64.59v0.02h-0.02c0,0.91,0.39,1.75,1.01,2.37c0.61,0.61,1.46,1,2.37,1v-0.02h0.01h12.19V35.65 v-0.01h0.02c0.01-3.85,1.58-7.34,4.1-9.86c2.51-2.5,5.98-4.06,9.82-4.07v-0.02h0.02H79.04L79.04,21.69z M105.18,108.92V35.65v-0.02 h0.02c0-0.91-0.39-1.75-1.01-2.37c-0.61-0.61-1.46-1-2.37-1v0.02h-0.01h-61.7h-0.02v-0.02c-0.91,0-1.75,0.39-2.37,1.01 c-0.61,0.61-1,1.46-1,2.37h0.02v0.01v73.27v0.02h-0.02c0,0.91,0.39,1.75,1.01,2.37c0.61,0.61,1.46,1,2.37,1v-0.02h0.01h61.7h0.02 v0.02c0.91,0,1.75-0.39,2.37-1.01c0.61-0.61,1-1.46,1-2.37h-0.02V108.92L105.18,108.92z"></path>
+                    </svg>
+
+                    {{ item.getProductArticle() }}
+                </div>
+
+            </div>
+
+        </div>
+    </td>
+
+    <td class="text-center">
+        {# Обложка #}
+        {% set image_path = '/assets/img/blank.svg' %}
+
+        {% if item.getYandexMarketProductImageExt() is defined and item.getYandexMarketProductImageExt() is not null %}
+            {% set img_host =  item.getYandexMarketProductImageCdn() == true  ? CDN_HOST : '' %}
+            {% set img_dir = item.getYandexMarketProductImage() %}
+            {% set img_file = (img_host is empty ? '/image.' : '/small.') ~ item.getYandexMarketProductImageExt() %}
+            {% set image_path = img_host ~ img_dir ~ img_file %}
+        {% endif %}
+
+
+        <button data-href="{{ path('yandex-market-products:admin.products.edit', {
+            invariable: item.getInvariable()
+        }) }}"
+                class="btn btn-sm icon border-0 rounded-3 bg-cover lazy modal-link disabled"
+                data-bs-toggle="modal"
+                data-bs-target="#modal"
+                data-bg="{{ image_path }}"
+                title="Настройки объявления"
+                style="width: 50px; height: 50px;"
+        >
+
+        </button>
+
+        {# <div class="icon rounded-3 bg-contain lazy p-1" style="width: 50px; height: 50px;"
+             >
+        </div> #}
+    </td>
+
+</tr>
\ No newline at end of file
Index: Resources/view/admin/products/index/pc/content.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/index/pc/content.html.twig b/Resources/view/admin/products/index/pc/content.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/index/pc/content.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,72 @@
+{% trans_default_domain('yandex-market-products.admin') %}
+
+<main class="main d-print-none ">
+
+    <section class="container px-4 mb-5">
+
+        <div class="mt-3 d-flex justify-content-between">
+            {{ include(_self|replace({ "content.html.twig": "breadcrumb.html.twig" })) }}
+        </div>
+
+        <div class="d-flex justify-content-between align-items-center mb-3">
+
+            <div class="w-100">
+                <h1 class="h4 text-uppercase fw-bolder mb-0">
+                    {{ 'page.index'|trans }}
+                </h1>
+            </div>
+
+        </div>
+
+        <div class="border border-light rounded-4 p-3">
+
+            <div class="d-flex justify-content-between">
+
+                {# Форма поиска по разделу #}
+                {% include Template('/_includes/'~baks_settings.device~'/search.html.twig') %}
+
+                {# Фильтр по продукции #}
+                <div class="w-100 d-flex align-items-center align-content-end gap-2">
+
+                    {% include Template('@products-product/filter/'~baks_settings.device~'/filter.html.twig') %}
+
+                    {{ form_start(yandexMarket) }}
+                    {{ form_widget(yandexMarket.exists, { attr: { style: 'width: 100px;' } }) }}
+                    {{ form_end(yandexMarket) }}
+
+                </div>
+
+            </div>
+
+            {# Текстовый результат фильтра #}
+            {% include Template('@products-product/filter/'~baks_settings.device~'/filter_text.html.twig') %}
+
+            <table class="table table-striped table-borderless mt-3"
+                   style='--bs-table-striped-bg: rgba(249,249,249,0.7);'>
+                <thead>
+
+                <tr>
+                    <th>#</th>
+                    <th class="text-center">Категория</th>
+                    <th class="ps-5 align-middle w-100">Продукция</th>
+                    <th class="text-center text-nowrap">Фото для Яндекс Маркета</th>
+                </tr>
+
+                </thead>
+
+                <tbody>
+
+                {% for item in query.data %}
+                    {{ include(_self|replace({ "content.html.twig": "card.html.twig" })) }}
+                {% endfor %}
+
+                </tbody>
+            </table>
+
+            {% include Template('_includes/'~baks_settings.device~'/pagination.html.twig') with { 'pagination' : query } %}
+
+        </div>
+
+    </section>
+
+</main>
\ No newline at end of file
Index: Resources/view/admin/products/index/pc/usecase.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/index/pc/usecase.html.twig b/Resources/view/admin/products/index/pc/usecase.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/index/pc/usecase.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,70 @@
+{# Пользовательское меню редактирования продукта #}
+
+{% set identifier = item.getId() %}
+{% if item.getProductOfferConst() is not null %}
+    {% set identifier = item.getProductOfferConst() %}
+{% endif %}
+{% if item.getProductVariationConst() is not null %}
+    {% set identifier = item.getProductVariationConst() %}
+{% endif %}
+{% if item.getProductModificationConst() is not null %}
+    {% set identifier = item.getProductModificationConst() %}
+{% endif %}
+
+<button class="btn btn-link btn-sm p-0"
+        id="usecase-{{ identifier }}"
+        data-bs-container="body"
+        data-bs-toggle="popover"
+        data-bs-placement="right"
+        data-bs-trigger="click"
+>
+    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"
+         fill="currentColor" class="text-muted"
+         viewBox="0 0 16 16">
+        <path fill-rule="evenodd"
+              d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z"/>
+    </svg>
+</button>
+
+{# Чекбокс #}
+<label>
+    <input class="form-check-input ms-3 p-2" type="checkbox"
+           value="{{ identifier }}">
+</label>
+
+
+<div id="usecase-{{ identifier }}-content" class="d-none">
+    <ul class="leader list-group list-group-flush ">
+
+        {# Изменить параметры #}
+        {% if  is_granted(ROLE~'_EDIT') or is_granted('ROLE_ADMIN') %}
+
+            <li class="list-group-item d-flex justify-content-between bg-transparent border-0 text-truncate rounded-5">
+                <a href="{{ path('yandex-market-products:admin.products.edit', {
+                    invariable: item.getInvariable()
+                }) }}"
+                   class="text-decoration-none text-dark w-100 modal-link"
+                   data-bs-toggle="modal"
+                   data-bs-target="#modal"
+                   title="Изменить параметры упаковки">
+                    Изменить настройки
+                </a>
+            </li>
+
+        {% endif %}
+
+        {# Редактировать продукт #}
+        {% if  is_granted('ROLE_PRODUCT_EDIT') or is_granted('ROLE_ADMIN') %}
+
+            <li class="list-group-item d-flex justify-content-between bg-transparent border-0 text-truncate rounded-5">
+                <a href="{{ path('products-product:admin.newedit.edit', {id: item.getEvent() }) }}"
+                   class="text-decoration-none text-dark w-100"
+                   title="{{ 'btn.edit'|trans({}, 'core.btn') }}">
+                    Редактировать продукт
+                </a>
+            </li>
+
+        {% endif %}
+
+    </ul>
+</div>
Index: Resources/view/admin/products/index/tablet/content.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/index/tablet/content.html.twig b/Resources/view/admin/products/index/tablet/content.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/index/tablet/content.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,1 @@
+<div>Временно недоступно</div>
\ No newline at end of file
Index: Resources/view/admin/products/index/template.html.twig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Resources/view/admin/products/index/template.html.twig b/Resources/view/admin/products/index/template.html.twig
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Resources/view/admin/products/index/template.html.twig	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,30 @@
+{% trans_default_domain('yandex-market-products.admin') %}
+
+{% set ROLE = 'ROLE_YA_MARKET_PRODUCTS' %}
+
+{# ---- CSS ------------------------------------------------------------ #}
+{% block title %}
+    {{ 'page.index'|trans }}
+{% endblock %}
+
+{# ---- ШАБЛОН ------------------------------------------------------------ #}
+{% extends Template('/admin/base.html.twig') %}
+
+{# ---- CSS ------------------------------------------------------------ #}
+{% block stylesheets %}
+    <link href="/assets/plugins/nice-select2/nice-select2.min.css" rel="stylesheet" type="text/css">
+{% endblock %}
+
+{# ---- КОНТЕНТ-БЛОК ------------------------------------------------------------ #}
+{% block content %}
+    {{ include(_self|replace({ "template.html.twig": baks_settings.device~"/content.html.twig" })) }}
+{% endblock %}
+
+{% block javascript %}
+<script nonce='{{ csp_nonce() }}' async  data-src="/assets/plugins/ckeditor/ckeditor.min.js?v={{ version }}" class='lazy'></script>
+<script nonce='{{ csp_nonce() }}' async  data-src="/assets/plugins/nice-select2/nice-select2.min.js?v={{ version }}" class="lazy"></script>
+<script nonce='{{ csp_nonce() }}' async data-src='/assets/js/radio.input.min.js?v={{ version }}' class='lazy'></script>
+<script nonce='{{ csp_nonce() }}' async data-src="/assets/products_product/filter.min.js?v={{ version }}" class="lazy"></script>
+<script nonce='{{ csp_nonce() }}' async data-src="/assets/yandex-market-products/filter.min.js?v={{ version }}" class="lazy"></script>
+<script nonce='{{ csp_nonce() }}' async  data-src="/assets/js/copy.min.js?v={{ version }}" class="lazy"></script>
+{% endblock %}
\ No newline at end of file
Index: Security/Index/Role.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Security/Index/Role.php b/Security/Index/Role.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Security/Index/Role.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,86 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Security\Index;
+
+use BaksDev\Menu\Admin\Command\Upgrade\MenuAdminInterface;
+use BaksDev\Menu\Admin\Type\SectionGroup\Group\Collection\MenuAdminSectionGroupCollectionInterface;
+use BaksDev\Orders\Order\Security\MenuGroupMarketplace;
+use BaksDev\Users\Profile\Group\Security\RoleInterface;
+use Symfony\Component\DependencyInjection\Attribute\AutoconfigureTag;
+
+#[AutoconfigureTag('baks.security.role')]
+#[AutoconfigureTag('baks.menu.admin')]
+final class Role implements RoleInterface, MenuAdminInterface
+{
+    public const string ROLE = 'ROLE_YA_MARKET_PRODUCTS';
+
+    public function getRole(): string
+    {
+        return self::ROLE;
+    }
+
+    /**
+     * Добавляем раздел в меню администрирования.
+     */
+
+    /** Метод возвращает PATH раздела */
+    public function getPath(): string
+    {
+        return 'yandex-market-products:admin.products.index';
+    }
+
+    /**
+     * Метод возвращает секцию, в которую помещается ссылка на раздел.
+     */
+    public function getGroupMenu(): MenuAdminSectionGroupCollectionInterface|bool
+    {
+        return new MenuGroupMarketplace();
+    }
+
+    /**
+     * Метод возвращает позицию, в которую располагается ссылка в секции меню.
+     */
+    public static function getSortMenu(): int
+    {
+        return 423;
+    }
+
+    /**
+     * Метод возвращает секцию, в которую помещается ссылка на раздел.
+     */
+    public function getDropdownMenu(): bool
+    {
+        return true;
+    }
+
+    /**
+     * Метод возвращает флаг "Модальное окно".
+     */
+    public function getModal(): bool
+    {
+        return false;
+    }
+}
Index: Security/Index/VoterEdit.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Security/Index/VoterEdit.php b/Security/Index/VoterEdit.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Security/Index/VoterEdit.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,49 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Security\Index;
+
+use BaksDev\Users\Profile\Group\Security\RoleInterface;
+use BaksDev\Users\Profile\Group\Security\VoterInterface;
+use Symfony\Component\DependencyInjection\Attribute\AutoconfigureTag;
+
+#[AutoconfigureTag('baks.security.voter')]
+final class VoterEdit implements VoterInterface
+{
+    /**
+     * Редактировать
+     */
+    public const string VOTER = 'EDIT';
+
+    public static function getVoter(): string
+    {
+        return Role::ROLE.'_'.self::VOTER;
+    }
+
+    public function equals(RoleInterface $role): bool
+    {
+        return $role->getRole() === Role::ROLE;
+    }
+}
\ No newline at end of file
Index: Security/Index/VoterIndex.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Security/Index/VoterIndex.php b/Security/Index/VoterIndex.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Security/Index/VoterIndex.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,47 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Security\Index;
+
+use BaksDev\Users\Profile\Group\Security\RoleInterface;
+use BaksDev\Users\Profile\Group\Security\VoterInterface;
+use BaksDev\Yandex\Market\Products\Security\Card\Role;
+use Symfony\Component\DependencyInjection\Attribute\AutoconfigureTag;
+
+#[AutoconfigureTag('baks.security.voter')]
+final class VoterIndex implements VoterInterface
+{
+    public const string VOTER = 'INDEX';
+
+    public static function getVoter(): string
+    {
+        return Role::ROLE.'_'.self::VOTER;
+    }
+
+    public function equals(RoleInterface $role): bool
+    {
+        return $role->getRole() === Role::ROLE;
+    }
+}
\ No newline at end of file
Index: Type/Id/YandexMarketProductType.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Type/Id/YandexMarketProductType.php b/Type/Id/YandexMarketProductType.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Type/Id/YandexMarketProductType.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,41 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Type\Id;
+
+use BaksDev\Core\Type\UidType\UidType;
+
+final class YandexMarketProductType extends UidType
+{
+    public function getClassType(): string
+    {
+        return YandexMarketProductUid::class;
+    }
+
+    public function getName(): string
+    {
+        return YandexMarketProductUid::TYPE;
+    }
+}
\ No newline at end of file
Index: Type/Id/YandexMarketProductUid.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Type/Id/YandexMarketProductUid.php b/Type/Id/YandexMarketProductUid.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Type/Id/YandexMarketProductUid.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,70 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Type\Id;
+
+use BaksDev\Core\Type\UidType\Uid;
+use Symfony\Component\Uid\AbstractUid;
+
+final class YandexMarketProductUid extends Uid
+{
+    /**
+     * Тестовый идентификатор
+     */
+    public const string TEST = '01968062-50ae-7810-b6a6-c5c46d57be9b';
+
+    public const string TYPE = 'yandex_market_product';
+
+    public function __construct(
+        AbstractUid|string|null $value = null,
+        private readonly mixed $attr = null,
+        private readonly mixed $option = null,
+        private readonly mixed $property = null,
+        private readonly mixed $characteristic = null,
+    )
+    {
+        parent::__construct($value);
+    }
+
+    public function getAttr(): mixed
+    {
+        return $this->attr;
+    }
+
+    public function getOption(): mixed
+    {
+        return $this->option;
+    }
+
+    public function getProperty(): mixed
+    {
+        return $this->property;
+    }
+
+    public function getCharacteristic(): mixed
+    {
+        return $this->characteristic;
+    }
+}
\ No newline at end of file
Index: Type/Image/YandexMarketProductImageType.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Type/Image/YandexMarketProductImageType.php b/Type/Image/YandexMarketProductImageType.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Type/Image/YandexMarketProductImageType.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,41 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Type\Image;
+
+use BaksDev\Core\Type\UidType\UidType;
+
+final class YandexMarketProductImageType extends UidType
+{
+    public function getClassType(): string
+    {
+        return YandexMarketProductImageUid::class;
+    }
+
+    public function getName(): string
+    {
+        return YandexMarketProductImageUid::TYPE;
+    }
+}
\ No newline at end of file
Index: Type/Image/YandexMarketProductImageUid.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Type/Image/YandexMarketProductImageUid.php b/Type/Image/YandexMarketProductImageUid.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/Type/Image/YandexMarketProductImageUid.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,81 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\Type\Image;
+
+use BaksDev\Core\Type\UidType\Uid;
+use Symfony\Component\Uid\AbstractUid;
+
+final class YandexMarketProductImageUid extends Uid
+{
+    /** Тестовый идентификатор */
+    public const string TEST = '01968085-cf09-786d-982c-901dd281389a';
+
+    public const string TYPE = 'yandex_market_product_image';
+
+    private mixed $attr;
+
+    private mixed $option;
+
+    private mixed $property;
+
+    private mixed $characteristic;
+
+    public function __construct(
+        AbstractUid|string|null $value = null,
+        mixed $attr = null,
+        mixed $option = null,
+        mixed $property = null,
+        mixed $characteristic = null,
+    )
+    {
+        parent::__construct($value);
+
+        $this->attr = $attr;
+        $this->option = $option;
+        $this->property = $property;
+        $this->characteristic = $characteristic;
+    }
+
+    public function getAttr(): mixed
+    {
+        return $this->attr;
+    }
+
+    public function getOption(): mixed
+    {
+        return $this->option;
+    }
+
+    public function getProperty(): mixed
+    {
+        return $this->property;
+    }
+
+    public function getCharacteristic(): mixed
+    {
+        return $this->characteristic;
+    }
+}
\ No newline at end of file
Index: UseCase/NewEdit/Images/YandexMarketProductImagesDTO.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UseCase/NewEdit/Images/YandexMarketProductImagesDTO.php b/UseCase/NewEdit/Images/YandexMarketProductImagesDTO.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/UseCase/NewEdit/Images/YandexMarketProductImagesDTO.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,131 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+namespace BaksDev\Yandex\Market\Products\UseCase\NewEdit\Images;
+
+use BaksDev\Yandex\Market\Products\Entity\Images\YandexMarketProductImage;
+use BaksDev\Yandex\Market\Products\Entity\YandexMarketProductInterface;
+use BaksDev\Yandex\Market\Products\Type\Image\YandexMarketProductImageUid;
+use Symfony\Component\HttpFoundation\File\File;
+
+/** @see YandexMarketProductImage */
+final class YandexMarketProductImagesDTO implements YandexMarketProductInterface
+{
+    private ?YandexMarketProductImageUid $id = null;
+
+    /** Обложка категории */
+    public ?File $file = null;
+
+    /** Название файла */
+    private ?string $name = null;
+
+    /** Расширение */
+    private ?string $ext = null;
+
+    /** Флаг загрузки CDN */
+    private bool $cdn = false;
+
+    /** Главное фото */
+    private bool $root = false;
+
+    /** Размер файла */
+    private ?int $size = null;
+
+    public function getId(): ?YandexMarketProductImageUid
+    {
+        return $this->id;
+    }
+
+    public function setId(YandexMarketProductImage|YandexMarketProductImageUid|string|null $id): void
+    {
+        if(is_string($id))
+        {
+            $id = new YandexMarketProductImageUid($id);
+        }
+
+        if($id instanceof YandexMarketProductImage)
+        {
+            $id = $id->getId();
+        }
+
+        $this->id = $id;
+    }
+
+    public function getName(): ?string
+    {
+        return $this->name;
+    }
+
+    public function setName(?string $name): self
+    {
+        $this->name = $name;
+        return $this;
+    }
+
+    public function getExt(): ?string
+    {
+        return $this->ext;
+    }
+
+    public function setExt(?string $ext): self
+    {
+        $this->ext = $ext;
+        return $this;
+    }
+
+    public function getCdn(): bool
+    {
+        return $this->cdn;
+    }
+
+    public function getRoot(): bool
+    {
+        return $this->root;
+    }
+
+    public function setRoot(bool $root): void
+    {
+        $this->root = $root;
+    }
+
+    public function getSize(): ?int
+    {
+        return $this->size;
+    }
+
+    public function setSize(?int $size): self
+    {
+        $this->size = $size;
+        return $this;
+    }
+
+    public function getFile(): ?File
+    {
+        return $this->file;
+    }
+
+    public function setFile(?File $file): void
+    {
+        $this->file = $file;
+    }
+}
\ No newline at end of file
Index: UseCase/NewEdit/Images/YandexMarketProductImagesForm.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UseCase/NewEdit/Images/YandexMarketProductImagesForm.php b/UseCase/NewEdit/Images/YandexMarketProductImagesForm.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/UseCase/NewEdit/Images/YandexMarketProductImagesForm.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,60 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\UseCase\NewEdit\Images;
+
+use Symfony\Component\Form\AbstractType;
+use Symfony\Component\Form\Extension\Core\Type\FileType;
+use Symfony\Component\Form\Extension\Core\Type\HiddenType;
+use Symfony\Component\Form\Extension\Core\Type\RadioType;
+use Symfony\Component\Form\FormBuilderInterface;
+use Symfony\Component\OptionsResolver\OptionsResolver;
+
+final class YandexMarketProductImagesForm extends AbstractType
+{
+    public function buildForm(FormBuilderInterface $builder, array $options): void
+    {
+        $builder->add('name', HiddenType::class);
+
+        $builder->add(
+            'file',
+            FileType::class,
+            [
+                'label' => false,
+                'required' => false,
+                'attr' => ['accept' => ".png, .jpg, .jpeg, .webp, .gif"],
+            ]
+        );
+
+        $builder->add('root', RadioType::class, ['required' => false]);
+    }
+
+    public function configureOptions(OptionsResolver $resolver): void
+    {
+        $resolver->setDefaults([
+            'data_class' => YandexMarketProductImagesDTO::class,
+        ]);
+    }
+}
Index: UseCase/NewEdit/Tests/YandexMarketProductEditTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UseCase/NewEdit/Tests/YandexMarketProductEditTest.php b/UseCase/NewEdit/Tests/YandexMarketProductEditTest.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/UseCase/NewEdit/Tests/YandexMarketProductEditTest.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,101 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\UseCase\NewEdit\Tests;
+
+use BaksDev\Core\BaksDevCoreBundle;
+use BaksDev\Products\Product\Type\Invariable\ProductInvariableUid;
+use BaksDev\Yandex\Market\Products\Entity\YandexMarketProduct;
+use BaksDev\Yandex\Market\Products\Type\Id\YandexMarketProductUid;
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\Images\YandexMarketProductImagesDTO;
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\YandexMarketProductDTO;
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\YandexMarketProductHandler;
+use Doctrine\ORM\EntityManagerInterface;
+use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
+use Symfony\Component\DependencyInjection\Attribute\When;
+use Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface;
+use Symfony\Component\Filesystem\Filesystem;
+use Symfony\Component\HttpFoundation\File\File;
+
+/**
+ * @group yandex-market-products
+ * @group yandex-market-products-use-case
+ *
+ * @depends BaksDev\Yandex\Market\Products\UseCase\NewEdit\Tests\YandexMarketProductNewTest::class
+ */
+#[When(env: 'test')]
+final class YandexMarketProductEditTest extends KernelTestCase
+{
+    public function testEdit(): void
+    {
+        /** @var ContainerBagInterface $containerBag */
+        $container = self::getContainer();
+        $containerBag = $container->get(ContainerBagInterface::class);
+        $fileSystem = $container->get(Filesystem::class);
+
+        /** Создаем путь к тестовой директории */
+        $testUploadDir = implode(
+            DIRECTORY_SEPARATOR,
+            [$containerBag->get('kernel.project_dir'), 'public', 'upload', 'tests']
+        );
+
+        $fileSystem->copy(
+            BaksDevCoreBundle::PATH.implode(
+                DIRECTORY_SEPARATOR,
+                ['Resources', 'assets', 'img', 'empty.webp']
+            ),
+            $testUploadDir.DIRECTORY_SEPARATOR.'photo1.webp'
+        );
+
+        $filePhoto = new File($testUploadDir.DIRECTORY_SEPARATOR.'photo.webp', false);
+
+        $em = $container->get(EntityManagerInterface::class);
+
+        /** @var YandexMarketProduct $product */
+        $product = $em
+            ->getRepository(YandexMarketProduct::class)
+            ->find(YandexMarketProductUid::TEST);
+
+        self::assertNotNull($product);
+
+        $editDTO = new YandexMarketProductDTO();
+        $imageDTO = new YandexMarketProductImagesDTO();
+        $imageDTO->setFile($filePhoto);
+
+        $editDTO->getImages()->add($imageDTO);
+
+        $product->getDto($editDTO);
+
+        self::assertTrue($editDTO->getInvariable()->equals(ProductInvariableUid::TEST));
+
+        self::assertNotEmpty($editDTO->getImages());
+
+        /** @var YandexMarketProductHandler $handler */
+        $handler = $container->get(YandexMarketProductHandler::class);
+        $editYandexMarketProduct = $handler->handle($editDTO);
+        self::assertTrue($editYandexMarketProduct instanceof YandexMarketProduct);
+        self::assertTrue($editYandexMarketProduct->getImages()->current()->getName() === 'photo1');
+    }
+}
\ No newline at end of file
Index: UseCase/NewEdit/Tests/YandexMarketProductNewTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UseCase/NewEdit/Tests/YandexMarketProductNewTest.php b/UseCase/NewEdit/Tests/YandexMarketProductNewTest.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/UseCase/NewEdit/Tests/YandexMarketProductNewTest.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,164 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\UseCase\NewEdit\Tests;
+
+use BaksDev\Core\BaksDevCoreBundle;
+use BaksDev\Products\Product\Type\Invariable\ProductInvariableUid;
+use BaksDev\Yandex\Market\Products\Entity\Images\YandexMarketProductImage;
+use BaksDev\Yandex\Market\Products\Entity\YandexMarketProduct;
+use BaksDev\Yandex\Market\Products\Type\Id\YandexMarketProductUid;
+use BaksDev\Yandex\Market\Products\Type\Image\YandexMarketProductImageUid;
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\Images\YandexMarketProductImagesDTO;
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\YandexMarketProductDTO;
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\YandexMarketProductHandler;
+use Doctrine\ORM\EntityManagerInterface;
+use Symfony\Bundle\FrameworkBundle\Test\KernelTestCase;
+use Symfony\Component\Console\Command\Command;
+use Symfony\Component\Console\Event\ConsoleCommandEvent;
+use Symfony\Component\Console\Input\StringInput;
+use Symfony\Component\Console\Output\NullOutput;
+use Symfony\Component\DependencyInjection\Attribute\When;
+use Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface;
+use Symfony\Component\EventDispatcher\EventDispatcherInterface;
+use Symfony\Component\Filesystem\Filesystem;
+use Symfony\Component\HttpFoundation\File\File;
+
+/**
+ * @group yandex-market-products
+ * @group yandex-market-products-use-case
+ */
+#[When(env: 'test')]
+final class YandexMarketProductNewTest extends KernelTestCase
+{
+    public static function setUpBeforeClass(): void
+    {
+        // Бросаем событие консольной комманды
+        $dispatcher = self::getContainer()->get(EventDispatcherInterface::class);
+        $event = new ConsoleCommandEvent(new Command(), new StringInput(''), new NullOutput());
+        $dispatcher->dispatch($event, 'console.command');
+
+        /** @var EntityManagerInterface $em */
+        $em = self::getContainer()->get(EntityManagerInterface::class);
+
+        $yandexMarketProduct = $em
+            ->getRepository(YandexMarketProduct::class)
+            ->findOneBy(['id' => YandexMarketProductUid::TEST]);
+
+        if($yandexMarketProduct)
+        {
+            $em->remove($yandexMarketProduct);
+        }
+
+        $yandexMarketProductImages = $em
+            ->getRepository(YandexMarketProductImage::class)
+            ->findBy(['market' => YandexMarketProductImageUid::TEST]);
+
+        foreach($yandexMarketProductImages as $image)
+        {
+            $em->remove($image);
+
+        }
+
+        $em->flush();
+        $em->clear();
+    }
+
+    public function testNew(): void
+    {
+        /** @var ContainerBagInterface $containerBag */
+        $container = self::getContainer();
+        $containerBag = $container->get(ContainerBagInterface::class);
+        $fileSystem = $container->get(Filesystem::class);
+
+
+        /** Создаем путь к тестовой директории */
+        $testUploadDir = implode(
+            DIRECTORY_SEPARATOR,
+            [$containerBag->get('kernel.project_dir'), 'public', 'upload', 'tests']
+        );
+
+        /** Проверяем существование директории для тестовых картинок */
+        if(false === is_dir($testUploadDir))
+        {
+            $fileSystem->mkdir($testUploadDir);
+        }
+
+        /**
+         * Создаем тестовое изображение
+         */
+        $fileSystem = $container->get(Filesystem::class);
+
+        $fileSystem->copy(
+            BaksDevCoreBundle::PATH.implode(
+                DIRECTORY_SEPARATOR,
+                ['Resources', 'assets', 'img', 'empty.webp']
+            ),
+            $testUploadDir.DIRECTORY_SEPARATOR.'photo.webp'
+        );
+
+        $filePhoto = new File($testUploadDir.DIRECTORY_SEPARATOR.'photo.webp', false);
+
+        /**
+         * Тестируем YandexMarketProductImagesDTO
+         */
+        $image = new YandexMarketProductImagesDTO();
+
+        $image->setFile($filePhoto);
+        self::assertEquals($image->getFile(), $filePhoto);
+
+        $image->setExt('webp');
+        self::assertTrue($image->getExt() === 'webp');
+
+        $image->setId(YandexMarketProductImageUid::TEST);
+        self::assertTrue($image->getId()->equals(YandexMarketProductImageUid::TEST));
+
+        $image->setName('test');
+        self::assertTrue($image->getName() === 'test');
+
+        $image->setRoot(true);
+        self::assertTrue($image->getRoot() === true);
+
+        $image->setSize(1);
+        self::assertTrue($image->getSize() === 1);
+
+        /**
+         * Тестируем YandexMarketProductDTO
+         */
+        $yandexMarketProductDTO = new YandexMarketProductDTO();
+
+        $yandexMarketProductDTO->setInvariable(ProductInvariableUid::TEST);
+        self::assertTrue($yandexMarketProductDTO->getInvariable()->equals(ProductInvariableUid::TEST));
+
+        $yandexMarketProductDTO->getImages()->add($image);
+
+        $container = self::getContainer();
+
+        /** @var YandexMarketProductHandler $handler */
+        $handler = $container->get(YandexMarketProductHandler::class);
+        $newYandexMarketProduct = $handler->handle($yandexMarketProductDTO);
+        self::assertTrue($newYandexMarketProduct instanceof YandexMarketProduct);
+    }
+}
\ No newline at end of file
Index: UseCase/NewEdit/YandexMarketProductDTO.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UseCase/NewEdit/YandexMarketProductDTO.php b/UseCase/NewEdit/YandexMarketProductDTO.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/UseCase/NewEdit/YandexMarketProductDTO.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,118 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\UseCase\NewEdit;
+
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\Images\YandexMarketProductImagesDTO;
+use BaksDev\Products\Product\Entity\ProductInvariable;
+use BaksDev\Products\Product\Type\Invariable\ProductInvariableUid;
+use BaksDev\Yandex\Market\Products\Entity\YandexMarketProduct;
+use BaksDev\Yandex\Market\Products\Entity\YandexMarketProductInterface;
+use Doctrine\Common\Collections\ArrayCollection;
+use Symfony\Component\Validator\Constraints as Assert;
+
+/** @see YandexMarketProduct */
+final class YandexMarketProductDTO implements YandexMarketProductInterface
+{
+    /**
+     * Invariable продукта
+     */
+    #[Assert\NotBlank]
+    #[Assert\Uuid]
+    private ProductInvariableUid $invariable;
+
+    /**
+     * Коллекция изображений продукта для ЯндексМаркета
+     *
+     * @var ArrayCollection<int, YandexMarketProductImagesDTO> $images
+     */
+    #[Assert\Valid]
+    private ArrayCollection $images;
+
+    public function __construct()
+    {
+        $this->images = new ArrayCollection();
+    }
+
+    public function getInvariable(): ProductInvariableUid
+    {
+        return $this->invariable;
+    }
+
+    public function setInvariable(ProductInvariableUid|ProductInvariable|string $invariable): self
+    {
+        if(is_string($invariable))
+        {
+            $invariable = new ProductInvariableUid($invariable);
+        }
+
+        if($invariable instanceof ProductInvariable)
+        {
+            $invariable = $invariable->getId();
+        }
+
+        $this->invariable = $invariable;
+
+        return $this;
+    }
+
+    /**
+     * @return ArrayCollection<int, YandexMarketProductImagesDTO>
+     */
+    public function getImages(): ArrayCollection
+    {
+        return $this->images;
+    }
+
+    public function addImage(YandexMarketProductImagesDTO $image): void
+    {
+        /** Пропускаем, если форма не содержит изображения и изображение изображению не присвоено имя */
+        if(null === $image->getFile() && null === $image->getName())
+        {
+            return;
+        }
+
+        /** Пропускаем, если форма не содержит изображения, либо изображение уже есть в коллекции */
+        $filter = $this->images->filter(function(YandexMarketProductImagesDTO $current) use ($image) {
+
+            if(null !== $image->getFile())
+            {
+                return false;
+            }
+
+            return $image->getName() === $current->getName();
+        });
+
+        if($filter->isEmpty())
+        {
+            $this->images->add($image);
+        }
+    }
+
+    public function removeImage(YandexMarketProductImagesDTO $image): void
+    {
+        $this->images->removeElement($image);
+    }
+}
\ No newline at end of file
Index: UseCase/NewEdit/YandexMarketProductForm.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UseCase/NewEdit/YandexMarketProductForm.php b/UseCase/NewEdit/YandexMarketProductForm.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/UseCase/NewEdit/YandexMarketProductForm.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,108 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\UseCase\NewEdit;
+
+use BaksDev\Core\Twig\TemplateExtension;
+use BaksDev\Products\Product\Repository\ProductDetail\ProductDetailByInvariableInterface;
+use BaksDev\Users\Profile\UserProfile\Repository\UserProfileTokenStorage\UserProfileTokenStorageInterface;
+use Symfony\Component\Form\AbstractType;
+use Symfony\Component\Form\Extension\Core\Type\CollectionType;
+use Symfony\Component\Form\Extension\Core\Type\SubmitType;
+use Symfony\Component\Form\Extension\Core\Type\TextareaType;
+use Symfony\Component\Form\FormBuilderInterface;
+use Symfony\Component\Form\FormEvent;
+use Symfony\Component\Form\FormEvents;
+use Symfony\Component\OptionsResolver\OptionsResolver;
+use Twig\Environment;
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\Images\YandexMarketProductImagesForm;
+use Exception;
+
+final class YandexMarketProductForm extends AbstractType
+{
+    public function __construct(
+        private readonly ProductDetailByInvariableInterface $productDetailByInvariable,
+        private readonly UserProfileTokenStorageInterface $userProfileTokenStorage,
+        private readonly TemplateExtension $templateExtension,
+        private readonly Environment $environment,
+    ) {}
+
+    public function buildForm(FormBuilderInterface $builder, array $options): void
+    {
+        $builder->add('images', CollectionType::class, [
+            'entry_type' => YandexMarketProductImagesForm::class,
+            'entry_options' => [
+                'label' => false,
+            ],
+            'label' => false,
+            'by_reference' => false,
+            'allow_delete' => true,
+            'allow_add' => true,
+            'prototype_name' => '__images__',
+        ]);
+
+        /** Рендеринг шаблона, если описание NULL */
+        $builder->addEventListener(
+            FormEvents::PRE_SET_DATA,
+            function(FormEvent $event): void {
+                /** @var YandexMarketProductDTO $dto */
+                $dto = $event->getData();
+
+                $product = $this->productDetailByInvariable
+                    ->invariable($dto->getInvariable())
+                    ->find()
+                    ->current();
+
+                if(null === $product)
+                {
+                    throw new Exception('Продукт не найден');
+                }
+
+                /** Получаем ID текущего профиля пользователя для составления пути для шаблона */
+                $userProfile = $this->userProfileTokenStorage->getProfileCurrent();
+            }
+        );
+
+        /** Сохранить */
+        $builder->add(
+            'yandex_market_product',
+            SubmitType::class,
+            [
+                'label' => 'Save',
+                'label_html' => true,
+                'attr' => ['class' => 'btn-primary']
+            ]
+        );
+    }
+
+    public function configureOptions(OptionsResolver $resolver): void
+    {
+        $resolver->setDefaults([
+            'data_class' => YandexMarketProductDTO::class,
+            'method' => 'POST',
+            'attr' => ['class' => 'w-100'],
+        ]);
+    }
+}
\ No newline at end of file
Index: UseCase/NewEdit/YandexMarketProductHandler.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/UseCase/NewEdit/YandexMarketProductHandler.php b/UseCase/NewEdit/YandexMarketProductHandler.php
new file mode 100644
--- /dev/null	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
+++ b/UseCase/NewEdit/YandexMarketProductHandler.php	(revision 9143aa546d6bbc4508fd55f9dd7054c324e2d355)
@@ -0,0 +1,81 @@
+<?php
+/*
+ * Copyright 2025.  Baks.dev <admin@baks.dev>
+ *
+ *  Permission is hereby granted, free of charge, to any person obtaining a copy
+ *  of this software and associated documentation files (the "Software"), to deal
+ *  in the Software without restriction, including without limitation the rights
+ *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ *  copies of the Software, and to permit persons to whom the Software is furnished
+ *  to do so, subject to the following conditions:
+ *
+ *  The above copyright notice and this permission notice shall be included in all
+ *  copies or substantial portions of the Software.
+ *
+ *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ *  FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
+ *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ *  THE SOFTWARE.
+ */
+
+declare(strict_types=1);
+
+namespace BaksDev\Yandex\Market\Products\UseCase\NewEdit;
+
+use BaksDev\Yandex\Market\Products\Entity\Images\YandexMarketProductImage;
+use BaksDev\Yandex\Market\Products\Entity\YandexMarketProduct;
+use BaksDev\Core\Entity\AbstractHandler;
+use BaksDev\Yandex\Market\Products\UseCase\NewEdit\Images\YandexMarketProductImagesDTO;
+use BaksDev\Yandex\Market\Products\Messenger\YandexMarketProductMessage;
+
+final class YandexMarketProductHandler extends AbstractHandler
+{
+    public function handle(YandexMarketProductDTO $command)
+    {
+        /** Добавляем command для валидации и гидрации */
+        $this->setCommand($command);
+
+        /** @var YandexMarketProduct $entity */
+        $entity = $this
+            ->prePersistOrUpdate(
+                YandexMarketProduct::class,
+                [
+                    'invariable' => $command->getInvariable(),
+                ]
+            );
+
+        /**
+         * Загружаем изображения
+         * @var YandexMarketProductImage $image
+         */
+        foreach($entity->getImages() as $image)
+        {
+            /** @var YandexMarketProductImagesDTO $yandexMarketImagesDTO */
+            if($yandexMarketImagesDTO = $image->getEntityDto())
+            {
+                if(null !== $yandexMarketImagesDTO->getFile())
+                {
+                    $this->imageUpload->upload($yandexMarketImagesDTO->getFile(), $image);
+                }
+            }
+        }
+
+        /** Валидация всех объектов */
+        if($this->validatorCollection->isInvalid())
+        {
+            return $this->validatorCollection->getErrorUniqid();
+        }
+
+        $this->flush();
+
+        $this->messageDispatch->dispatch(
+            message: new YandexMarketProductMessage($entity->getId()),
+            transport: 'yandex-market-products'
+        );
+
+        return $entity;
+    }
+}
\ No newline at end of file
